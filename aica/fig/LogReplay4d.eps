%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 307 575 484
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, September 1, 2011 9:23:55 AM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
528 167 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
528.000 0.00000 l
528.000 167.000 l
0.00000 167.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 528 167 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -34.0000 -239.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
34.0000 239.000 m
562.000 239.000 l
562.000 406.000 l
34.0000 406.000 l
34.0000 239.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -34.0000 -239.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -34.0000 -239.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -34.0000 -239.000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
39.5488 301.464 m
39.0176 301.464 38.3770 301.344 37.6270 301.105  c
37.6270 300.042 l
38.3770 300.417 39.0332 300.605 39.5957 300.605  c
39.9290 300.605 40.2051 300.514 40.4238 300.331  c
40.6426 300.149 40.7520 299.922 40.7520 299.652  c
40.7520 299.266 40.4447 298.943 39.8301 298.683  c
39.1582 298.386 l
38.1582 297.980 37.6582 297.386 37.6582 296.605  c
37.6582 296.053 37.8561 295.618 38.2520 295.300  c
38.6478 294.982 39.1842 294.823 39.8613 294.823  c
40.2155 294.823 40.6582 294.870 41.1895 294.964  c
41.4238 295.011 l
41.4238 295.980 l
40.7780 295.782 40.2676 295.683 39.8926 295.683  c
39.1426 295.683 38.7676 295.954 38.7676 296.495  c
38.7676 296.839 39.0488 297.131 39.6113 297.370  c
40.1738 297.605 l
40.7988 297.876 41.2441 298.157 41.5098 298.448  c
41.7754 298.740 41.9082 299.110 41.9082 299.558  c
41.9082 300.110 41.6869 300.566 41.2441 300.925  c
40.8014 301.284 40.2363 301.464 39.5488 301.464  c
h
45.8848 301.464 m
45.3014 301.464 44.8457 301.297 44.5176 300.964  c
44.1895 300.631 44.0254 300.162 44.0254 299.558  c
44.0254 295.823 l
43.2285 295.823 l
43.2285 294.964 l
44.0254 294.964 l
44.0254 293.808 l
45.1816 293.698 l
45.1816 294.964 l
46.8379 294.964 l
46.8379 295.823 l
45.1816 295.823 l
45.1816 299.355 l
45.1816 300.188 45.5410 300.605 46.2598 300.605  c
46.4056 300.605 46.5879 300.579 46.8066 300.527  c
46.8066 301.323 l
46.4525 301.417 46.1452 301.464 45.8848 301.464  c
h
51.7481 300.511 m
51.0606 301.146 50.3939 301.464 49.7481 301.464  c
49.2168 301.464 48.7793 301.300 48.4356 300.972  c
48.0918 300.644 47.9199 300.230 47.9199 299.730  c
47.9199 299.032 48.2116 298.495 48.7949 298.120  c
49.3783 297.745 50.2116 297.558 51.2949 297.558  c
51.5762 297.558 l
51.5762 296.792 l
51.5762 296.053 51.1960 295.683 50.4356 295.683  c
49.8314 295.683 49.1751 295.870 48.4668 296.245  c
48.4668 295.292 l
49.2481 294.980 49.9772 294.823 50.6543 294.823  c
51.3626 294.823 51.8861 294.982 52.2246 295.300  c
52.5632 295.618 52.7324 296.115 52.7324 296.792  c
52.7324 299.683 l
52.7324 300.339 52.9356 300.667 53.3418 300.667  c
53.3939 300.667 53.4668 300.657 53.5606 300.636  c
53.6387 301.277 l
53.3783 301.402 53.0918 301.464 52.7793 301.464  c
52.2376 301.464 51.8939 301.146 51.7481 300.511  c
h
51.5762 299.886 m
51.5762 298.245 l
51.1856 298.230 l
50.5606 298.230 50.0527 298.349 49.6621 298.589  c
49.2715 298.829 49.0762 299.146 49.0762 299.542  c
49.0762 299.813 49.1725 300.045 49.3652 300.238  c
49.5579 300.430 49.7949 300.527 50.0762 300.527  c
50.5553 300.527 51.0553 300.313 51.5762 299.886  c
h
55.0938 301.323 m
55.0938 294.964 l
56.2500 294.964 l
56.2500 296.152 l
56.7083 295.266 57.3698 294.823 58.2344 294.823  c
58.3594 294.823 58.4844 294.834 58.6094 294.855  c
58.6094 295.933 l
58.4115 295.860 58.2344 295.823 58.0781 295.823  c
57.3490 295.823 56.7396 296.256 56.2500 297.120  c
56.2500 301.323 l
55.0938 301.323 l
h
61.9102 301.464 m
61.3268 301.464 60.8711 301.297 60.5430 300.964  c
60.2148 300.631 60.0508 300.162 60.0508 299.558  c
60.0508 295.823 l
59.2539 295.823 l
59.2539 294.964 l
60.0508 294.964 l
60.0508 293.808 l
61.2070 293.698 l
61.2070 294.964 l
62.8633 294.964 l
62.8633 295.823 l
61.2070 295.823 l
61.2070 299.355 l
61.2070 300.188 61.5664 300.605 62.2852 300.605  c
62.4310 300.605 62.6133 300.579 62.8320 300.527  c
62.8320 301.323 l
62.4779 301.417 62.1706 301.464 61.9102 301.464  c
h
f
0 J
1.45000 M
newpath
65.0205 324.884 m
65.0205 333.168 58.3048 339.884 50.0205 339.884  c
41.7362 339.884 35.0205 333.168 35.0205 324.884  c
35.0205 316.600 41.7362 309.884 50.0205 309.884  c
58.3048 309.884 65.0205 316.600 65.0205 324.884  c
h
S
2 J
10.0000 M
newpath
173.106 294.599 m
173.106 285.927 l
174.263 285.927 l
174.263 287.114 l
174.731 286.229 175.440 285.786 176.388 285.786  c
177.148 285.786 177.750 286.065 178.192 286.622  c
178.635 287.180 178.856 287.943 178.856 288.911  c
178.856 289.963 178.606 290.812 178.106 291.458  c
177.606 292.104 176.950 292.427 176.138 292.427  c
175.388 292.427 174.763 292.141 174.263 291.568  c
174.263 294.599 l
173.106 294.599 l
h
174.263 290.771 m
174.856 291.302 175.424 291.568 175.966 291.568  c
177.070 291.568 177.622 290.719 177.622 289.021  c
177.622 287.531 177.132 286.786 176.153 286.786  c
175.507 286.786 174.877 287.135 174.263 287.833  c
174.263 290.771 l
h
183.269 292.505 m
182.373 292.505 181.649 292.083 181.097 291.239  c
180.545 290.396 180.269 289.297 180.269 287.943  c
180.269 286.578 180.547 285.479 181.104 284.646  c
181.662 283.812 182.394 283.396 183.300 283.396  c
184.206 283.396 184.938 283.812 185.495 284.646  c
186.052 285.479 186.331 286.573 186.331 287.927  c
186.331 289.312 186.052 290.422 185.495 291.255  c
184.938 292.088 184.196 292.505 183.269 292.505  c
h
183.284 291.630 m
184.503 291.630 185.112 290.391 185.112 287.911  c
185.112 285.484 184.508 284.271 183.300 284.271  c
182.102 284.271 181.503 285.495 181.503 287.943  c
181.503 290.401 182.097 291.630 183.284 291.630  c
h
f
0 J
1.45000 M
newpath
194.521 259.884 m
194.521 268.168 187.805 274.884 179.521 274.884  c
171.236 274.884 164.521 268.168 164.521 259.884  c
164.521 251.600 171.236 244.884 179.521 244.884  c
187.805 244.884 194.521 251.600 194.521 259.884  c
h
S
2 J
10.0000 M
newpath
173.106 369.136 m
173.106 360.464 l
174.263 360.464 l
174.263 361.652 l
174.731 360.766 175.440 360.323 176.388 360.323  c
177.148 360.323 177.750 360.602 178.192 361.159  c
178.635 361.717 178.856 362.480 178.856 363.448  c
178.856 364.501 178.606 365.349 178.106 365.995  c
177.606 366.641 176.950 366.964 176.138 366.964  c
175.388 366.964 174.763 366.678 174.263 366.105  c
174.263 369.136 l
173.106 369.136 l
h
174.263 365.308 m
174.856 365.839 175.424 366.105 175.966 366.105  c
177.070 366.105 177.622 365.256 177.622 363.558  c
177.622 362.068 177.132 361.323 176.153 361.323  c
175.507 361.323 174.877 361.672 174.263 362.370  c
174.263 365.308 l
h
180.503 366.823 m
180.503 365.808 l
180.836 365.027 181.513 364.172 182.534 363.245  c
183.206 362.652 l
184.050 361.881 184.472 361.115 184.472 360.355  c
184.472 359.876 184.328 359.498 184.042 359.222  c
183.756 358.946 183.357 358.808 182.847 358.808  c
182.243 358.808 181.534 359.037 180.722 359.495  c
180.722 358.480 l
181.493 358.115 182.253 357.933 183.003 357.933  c
183.815 357.933 184.469 358.152 184.964 358.589  c
185.459 359.027 185.706 359.605 185.706 360.323  c
185.706 360.844 185.581 361.308 185.331 361.714  c
185.081 362.120 184.618 362.610 183.940 363.183  c
183.503 363.558 l
182.576 364.339 182.039 365.089 181.894 365.808  c
185.659 365.808 l
185.659 366.823 l
180.503 366.823 l
h
f
0 J
1.45000 M
newpath
194.521 390.384 m
194.521 398.668 187.805 405.384 179.521 405.384  c
171.236 405.384 164.521 398.668 164.521 390.384  c
164.521 382.100 171.236 375.384 179.521 375.384  c
187.805 375.384 194.521 382.100 194.521 390.384  c
h
S
2 J
10.0000 M
newpath
121.005 326.080 m
119.411 322.033 l
117.802 326.080 l
121.005 326.080 l
h
122.411 329.673 m
121.395 327.064 l
117.411 327.064 l
116.380 329.673 l
115.145 329.673 l
118.864 320.283 l
120.192 320.283 l
123.864 329.673 l
122.411 329.673 l
h
f
0 J
1.45000 M
newpath
104.521 309.884 m
134.521 309.884 l
134.521 339.884 l
104.521 339.884 l
104.521 309.884 l
h
S
2 J
10.0000 M
newpath
431.041 259.884 m
431.041 262.645 428.802 264.884 426.041 264.884  c
423.280 264.884 421.041 262.645 421.041 259.884  c
421.041 257.123 423.280 254.884 426.041 254.884  c
428.802 254.884 431.041 257.123 431.041 259.884  c
h
f
0 J
1.45000 M
newpath
431.041 259.884 m
431.041 262.645 428.802 264.884 426.041 264.884  c
423.280 264.884 421.041 262.645 421.041 259.884  c
421.041 257.123 423.280 254.884 426.041 254.884  c
428.802 254.884 431.041 257.123 431.041 259.884  c
h
S
2 J
10.0000 M
newpath
240.261 264.673 m
240.261 255.283 l
242.698 255.283 l
243.636 255.283 244.354 255.460 244.854 255.814  c
245.354 256.168 245.604 256.679 245.604 257.345  c
245.604 258.481 244.964 259.293 243.683 259.783  c
245.214 260.251 245.979 261.100 245.979 262.330  c
245.979 263.090 245.727 263.671 245.222 264.072  c
244.716 264.473 243.985 264.673 243.026 264.673  c
240.261 264.673 l
h
241.573 263.673 m
241.854 263.673 l
242.823 263.673 243.453 263.611 243.745 263.486  c
244.297 263.257 244.573 262.830 244.573 262.205  c
244.573 261.642 244.323 261.176 243.823 260.806  c
243.323 260.436 242.698 260.251 241.948 260.251  c
241.573 260.251 l
241.573 263.673 l
h
241.573 259.408 m
241.995 259.408 l
242.714 259.408 243.269 259.254 243.659 258.947  c
244.050 258.639 244.245 258.210 244.245 257.658  c
244.245 256.741 243.526 256.283 242.089 256.283  c
241.573 256.283 l
241.573 259.408 l
h
f
0 J
1.45000 M
newpath
227.781 244.884 m
257.781 244.884 l
257.781 274.884 l
227.781 274.884 l
227.781 244.884 l
h
S
2 J
10.0000 M
newpath
306.778 395.408 m
305.320 395.408 304.192 394.978 303.395 394.119  c
302.598 393.259 302.200 392.048 302.200 390.486  c
302.200 388.913 302.606 387.697 303.419 386.837  c
304.231 385.978 305.372 385.548 306.841 385.548  c
307.684 385.548 308.674 385.684 309.809 385.955  c
309.809 387.205 l
308.518 386.757 307.523 386.533 306.825 386.533  c
305.804 386.533 305.015 386.879 304.458 387.572  c
303.900 388.264 303.622 389.241 303.622 390.501  c
303.622 391.699 303.919 392.642 304.512 393.330  c
305.106 394.017 305.924 394.361 306.966 394.361  c
307.851 394.361 308.799 394.090 309.809 393.548  c
309.809 394.689 l
308.882 395.168 307.872 395.408 306.778 395.408  c
h
f
0 J
1.45000 M
newpath
291.041 375.384 m
321.041 375.384 l
321.041 405.384 l
291.041 405.384 l
291.041 375.384 l
h
S
2 J
10.0000 M
newpath
482.391 324.673 m
482.391 315.283 l
485.500 315.283 l
486.438 315.283 487.193 315.387 487.766 315.595  c
488.339 315.804 488.834 316.152 489.250 316.642  c
489.917 317.434 490.250 318.470 490.250 319.751  c
490.250 321.314 489.839 322.525 489.016 323.384  c
488.193 324.244 487.032 324.673 485.532 324.673  c
482.391 324.673 l
h
483.719 323.673 m
485.422 323.673 l
486.641 323.673 487.506 323.345 488.016 322.689  c
488.558 321.991 488.829 321.054 488.829 319.876  c
488.829 318.772 488.563 317.908 488.032 317.283  c
487.698 316.897 487.308 316.634 486.860 316.494  c
486.412 316.353 485.730 316.283 484.813 316.283  c
483.719 316.283 l
483.719 323.673 l
h
f
0 J
1.45000 M
newpath
471.041 304.884 m
501.041 304.884 l
501.041 334.884 l
471.041 334.884 l
471.041 304.884 l
h
S
2 J
10.0000 M
newpath
299.627 294.599 m
299.627 285.927 l
300.783 285.927 l
300.783 287.114 l
301.252 286.229 301.960 285.786 302.908 285.786  c
303.669 285.786 304.270 286.065 304.713 286.622  c
305.156 287.180 305.377 287.943 305.377 288.911  c
305.377 289.963 305.127 290.812 304.627 291.458  c
304.127 292.104 303.471 292.427 302.658 292.427  c
301.908 292.427 301.283 292.141 300.783 291.568  c
300.783 294.599 l
299.627 294.599 l
h
300.783 290.771 m
301.377 291.302 301.945 291.568 302.486 291.568  c
303.590 291.568 304.143 290.719 304.143 289.021  c
304.143 287.531 303.653 286.786 302.674 286.786  c
302.028 286.786 301.398 287.135 300.783 287.833  c
300.783 290.771 l
h
307.836 292.286 m
307.836 291.411 l
309.570 291.411 l
309.570 284.568 l
307.836 285.005 l
307.836 284.114 l
310.727 283.396 l
310.727 291.411 l
312.461 291.411 l
312.461 292.286 l
307.836 292.286 l
h
f
0 J
1.45000 M
newpath
321.041 259.884 m
321.041 268.168 314.325 274.884 306.041 274.884  c
297.757 274.884 291.041 268.168 291.041 259.884  c
291.041 251.600 297.757 244.884 306.041 244.884  c
314.325 244.884 321.041 251.600 321.041 259.884  c
h
S
2 J
10.0000 M
newpath
419.627 369.136 m
419.627 360.464 l
420.783 360.464 l
420.783 361.652 l
421.252 360.766 421.960 360.323 422.908 360.323  c
423.669 360.323 424.270 360.602 424.713 361.159  c
425.156 361.717 425.377 362.480 425.377 363.448  c
425.377 364.501 425.127 365.349 424.627 365.995  c
424.127 366.641 423.471 366.964 422.658 366.964  c
421.908 366.964 421.283 366.678 420.783 366.105  c
420.783 369.136 l
419.627 369.136 l
h
420.783 365.308 m
421.377 365.839 421.945 366.105 422.486 366.105  c
423.590 366.105 424.143 365.256 424.143 363.558  c
424.143 362.068 423.653 361.323 422.674 361.323  c
422.028 361.323 421.398 361.672 420.783 362.370  c
420.783 365.308 l
h
427.242 366.761 m
427.242 365.683 l
428.076 366.006 428.727 366.167 429.195 366.167  c
429.747 366.167 430.198 366.006 430.547 365.683  c
430.896 365.360 431.070 364.943 431.070 364.433  c
431.070 363.214 430.216 362.605 428.508 362.605  c
428.039 362.605 l
428.039 361.823 l
428.445 361.823 l
430.049 361.823 430.852 361.261 430.852 360.136  c
430.852 359.251 430.326 358.808 429.273 358.808  c
428.690 358.808 428.055 358.969 427.367 359.292  c
427.367 358.277 l
428.044 358.047 428.706 357.933 429.352 357.933  c
431.122 357.933 432.008 358.605 432.008 359.948  c
432.008 360.969 431.404 361.693 430.195 362.120  c
431.602 362.443 432.305 363.209 432.305 364.417  c
432.305 365.240 432.034 365.883 431.492 366.347  c
430.951 366.810 430.211 367.042 429.273 367.042  c
428.732 367.042 428.055 366.948 427.242 366.761  c
h
f
0 J
1.45000 M
newpath
441.041 390.384 m
441.041 398.668 434.325 405.384 426.041 405.384  c
417.757 405.384 411.041 398.668 411.041 390.384  c
411.041 382.100 417.757 375.384 426.041 375.384  c
434.325 375.384 441.041 382.100 441.041 390.384  c
h
S
2 J
10.0000 M
newpath
541.011 296.120 m
540.240 296.349 539.578 296.464 539.026 296.464  c
538.089 296.464 537.326 296.154 536.737 295.534  c
536.149 294.915 535.854 294.105 535.854 293.105  c
535.854 292.146 536.115 291.357 536.636 290.738  c
537.157 290.118 537.823 289.808 538.636 289.808  c
539.407 289.808 540.000 290.081 540.417 290.628  c
540.834 291.175 541.042 291.954 541.042 292.964  c
541.042 293.323 l
537.026 293.323 l
537.193 294.834 537.933 295.589 539.245 295.589  c
539.724 295.589 540.313 295.459 541.011 295.198  c
541.011 296.120 l
h
537.073 292.448 m
539.886 292.448 l
539.886 291.271 539.443 290.683 538.558 290.683  c
537.672 290.683 537.177 291.271 537.073 292.448  c
h
543.040 296.323 m
543.040 289.964 l
544.196 289.964 l
544.196 291.152 l
544.800 290.266 545.545 289.823 546.431 289.823  c
546.983 289.823 547.423 289.998 547.751 290.347  c
548.079 290.696 548.243 291.162 548.243 291.745  c
548.243 296.323 l
547.087 296.323 l
547.087 292.120 l
547.087 291.652 547.017 291.316 546.876 291.113  c
546.735 290.909 546.509 290.808 546.196 290.808  c
545.488 290.808 544.821 291.271 544.196 292.198  c
544.196 296.323 l
543.040 296.323 l
h
554.565 296.323 m
554.565 295.120 l
554.097 296.016 553.394 296.464 552.456 296.464  c
551.685 296.464 551.081 296.185 550.644 295.628  c
550.206 295.071 549.987 294.308 549.987 293.339  c
549.987 292.277 550.235 291.425 550.729 290.784  c
551.224 290.144 551.878 289.823 552.690 289.823  c
553.451 289.823 554.076 290.110 554.565 290.683  c
554.565 287.073 l
555.737 287.073 l
555.737 296.323 l
554.565 296.323 l
h
554.565 291.480 m
553.972 290.948 553.409 290.683 552.878 290.683  c
551.763 290.683 551.206 291.532 551.206 293.230  c
551.206 294.709 551.701 295.448 552.690 295.448  c
553.326 295.448 553.951 295.099 554.565 294.402  c
554.565 291.480 l
h
f
0 J
1.45000 M
newpath
561.041 319.884 m
561.041 328.168 554.325 334.884 546.041 334.884  c
537.757 334.884 531.041 328.168 531.041 319.884  c
531.041 311.600 537.757 304.884 546.041 304.884  c
554.325 304.884 561.041 311.600 561.041 319.884  c
h
S
2 J
10.0000 M
0.00000 1.00000 0.00000 RG
newpath
361.041 239.884 m
371.041 239.884 l
371.041 279.884 l
361.041 279.884 l
361.041 239.884 l
h
f
0.00000 0.00000 0.00000 RG
newpath
362.812 294.393 m
362.187 294.393 361.695 294.211 361.336 293.846  c
360.976 293.481 360.797 292.976 360.797 292.330  c
360.797 288.283 l
359.937 288.283 l
359.937 287.346 l
360.797 287.346 l
360.797 286.096 l
362.047 285.971 l
362.047 287.346 l
363.859 287.346 l
363.859 288.283 l
362.047 288.283 l
362.047 292.096 l
362.047 293.002 362.437 293.455 363.219 293.455  c
363.385 293.455 363.588 293.429 363.828 293.377  c
363.828 294.237 l
363.442 294.341 363.104 294.393 362.812 294.393  c
h
366.315 294.237 m
366.315 293.299 l
368.190 293.299 l
368.190 285.877 l
366.315 286.346 l
366.315 285.393 l
369.456 284.612 l
369.456 293.299 l
371.331 293.299 l
371.331 294.237 l
366.315 294.237 l
h
f
0.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
361.041 239.884 m
371.041 239.884 l
371.041 279.884 l
361.041 279.884 l
361.041 239.884 l
h
S
2 J
10.0000 M
newpath
419.627 294.599 m
419.627 285.927 l
420.783 285.927 l
420.783 287.114 l
421.252 286.229 421.960 285.786 422.908 285.786  c
423.669 285.786 424.270 286.065 424.713 286.622  c
425.156 287.180 425.377 287.943 425.377 288.911  c
425.377 289.963 425.127 290.812 424.627 291.458  c
424.127 292.104 423.471 292.427 422.658 292.427  c
421.908 292.427 421.283 292.141 420.783 291.568  c
420.783 294.599 l
419.627 294.599 l
h
420.783 290.771 m
421.377 291.302 421.945 291.568 422.486 291.568  c
423.590 291.568 424.143 290.719 424.143 289.021  c
424.143 287.531 423.653 286.786 422.674 286.786  c
422.028 286.786 421.398 287.135 420.783 287.833  c
420.783 290.771 l
h
430.539 292.286 m
430.539 289.833 l
426.633 289.833 l
426.633 288.958 l
430.539 283.614 l
431.633 283.614 l
431.633 288.880 l
432.789 288.880 l
432.789 289.833 l
431.633 289.833 l
431.633 292.286 l
430.539 292.286 l
h
427.773 288.880 m
430.617 288.880 l
430.617 285.036 l
427.773 288.880 l
h
f
0 J
1.45000 M
newpath
441.041 259.884 m
441.041 268.168 434.325 274.884 426.041 274.884  c
417.757 274.884 411.041 268.168 411.041 259.884  c
411.041 251.600 417.757 244.884 426.041 244.884  c
434.325 244.884 441.041 251.600 441.041 259.884  c
h
S
2 J
10.0000 M
newpath
184.521 390.384 m
184.521 393.145 182.282 395.384 179.521 395.384  c
176.759 395.384 174.521 393.145 174.521 390.384  c
174.521 387.623 176.759 385.384 179.521 385.384  c
182.282 385.384 184.521 387.623 184.521 390.384  c
h
f
0 J
1.45000 M
newpath
184.521 390.384 m
184.521 393.145 182.282 395.384 179.521 395.384  c
176.759 395.384 174.521 393.145 174.521 390.384  c
174.521 387.623 176.759 385.384 179.521 385.384  c
182.282 385.384 184.521 387.623 184.521 390.384  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
65.0205 324.884 m
96.5205 324.884 l
S
newpath
104.521 324.884 m
92.5205 319.884 l
95.5205 324.884 l
92.5205 329.884 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
133.367 309.884 m
163.920 276.784 l
S
newpath
169.346 270.906 m
157.533 276.332 l
163.242 277.519 l
164.881 283.115 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
133.261 339.884 m
163.985 373.424 l
S
newpath
169.388 379.323 m
164.970 367.097 l
163.309 372.687 l
157.596 373.852 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
194.521 259.884 m
219.781 259.884 l
S
newpath
227.781 259.884 m
215.781 254.884 l
218.781 259.884 l
215.781 264.884 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
194.521 390.384 m
283.041 390.384 l
S
newpath
291.041 390.384 m
279.041 385.384 l
282.041 390.384 l
279.041 395.384 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
257.781 259.884 m
283.041 259.884 l
S
newpath
291.041 259.884 m
279.041 254.884 l
282.041 259.884 l
279.041 264.884 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
321.041 390.384 m
403.041 390.384 l
S
newpath
411.041 390.384 m
399.041 385.384 l
402.041 390.384 l
399.041 395.384 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
435.763 378.961 m
468.090 340.976 l
S
newpath
473.275 334.884 m
461.690 340.782 l
467.442 341.738 l
469.305 347.263 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
501.041 319.884 m
523.041 319.884 l
S
newpath
531.041 319.884 m
519.041 314.884 l
522.041 319.884 l
519.041 324.884 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
321.041 259.884 m
353.041 259.884 l
S
newpath
361.041 259.884 m
349.041 254.884 l
352.041 259.884 l
349.041 264.884 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
371.041 259.884 m
403.041 259.884 l
S
newpath
411.041 259.884 m
399.041 254.884 l
402.041 259.884 l
399.041 264.884 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
436.648 270.491 m
465.384 299.227 l
S
newpath
471.041 304.884 m
466.091 292.863 l
464.677 298.520 l
459.020 299.934 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF

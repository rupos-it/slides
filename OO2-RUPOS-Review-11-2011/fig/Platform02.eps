%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 263 575 528
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, September 1, 2011 3:43:53 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
692 330 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
692.000 0.00000 l
692.000 330.000 l
0.00000 330.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 692 330 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -130.000 -88.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
130.000 88.0000 m
822.000 88.0000 l
822.000 418.000 l
130.000 418.000 l
130.000 88.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -130.000 -88.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -130.000 -88.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -130.000 -88.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
567.516 361.821 m
566.031 358.071 l
564.562 361.821 l
567.516 361.821 l
h
568.812 365.134 m
567.875 362.727 l
564.203 362.727 l
563.250 365.134 l
562.094 365.134 l
565.547 356.462 l
566.766 356.462 l
570.141 365.134 l
568.812 365.134 l
h
571.436 365.134 m
571.436 358.774 l
572.592 358.774 l
572.592 359.962 l
573.196 359.076 573.941 358.634 574.826 358.634  c
575.378 358.634 575.818 358.808 576.146 359.157  c
576.475 359.506 576.639 359.972 576.639 360.555  c
576.639 365.134 l
575.482 365.134 l
575.482 360.930 l
575.482 360.462 575.412 360.126 575.271 359.923  c
575.131 359.720 574.904 359.618 574.592 359.618  c
573.883 359.618 573.217 360.082 572.592 361.009  c
572.592 365.134 l
571.436 365.134 l
h
582.164 364.321 m
581.477 364.957 580.810 365.274 580.164 365.274  c
579.633 365.274 579.195 365.110 578.852 364.782  c
578.508 364.454 578.336 364.040 578.336 363.540  c
578.336 362.842 578.628 362.305 579.211 361.930  c
579.794 361.555 580.628 361.368 581.711 361.368  c
581.992 361.368 l
581.992 360.602 l
581.992 359.863 581.612 359.493 580.852 359.493  c
580.247 359.493 579.591 359.680 578.883 360.055  c
578.883 359.102 l
579.664 358.790 580.393 358.634 581.070 358.634  c
581.779 358.634 582.302 358.792 582.641 359.110  c
582.979 359.428 583.148 359.925 583.148 360.602  c
583.148 363.493 l
583.148 364.149 583.352 364.477 583.758 364.477  c
583.810 364.477 583.883 364.467 583.977 364.446  c
584.055 365.087 l
583.794 365.212 583.508 365.274 583.195 365.274  c
582.654 365.274 582.310 364.957 582.164 364.321  c
h
581.992 363.696 m
581.992 362.055 l
581.602 362.040 l
580.977 362.040 580.469 362.160 580.078 362.399  c
579.688 362.639 579.492 362.957 579.492 363.352  c
579.492 363.623 579.589 363.855 579.781 364.048  c
579.974 364.240 580.211 364.337 580.492 364.337  c
580.971 364.337 581.471 364.123 581.992 363.696  c
h
585.510 365.134 m
585.510 355.884 l
586.666 355.884 l
586.666 365.134 l
585.510 365.134 l
h
589.354 367.446 m
590.385 365.134 l
587.916 358.774 l
589.166 358.774 l
590.994 363.555 l
592.932 358.774 l
594.025 358.774 l
590.541 367.446 l
589.354 367.446 l
h
596.936 365.274 m
596.404 365.274 595.764 365.154 595.014 364.915  c
595.014 363.852 l
595.764 364.227 596.420 364.415 596.982 364.415  c
597.316 364.415 597.592 364.324 597.811 364.141  c
598.029 363.959 598.139 363.733 598.139 363.462  c
598.139 363.076 597.831 362.753 597.217 362.493  c
596.545 362.196 l
595.545 361.790 595.045 361.196 595.045 360.415  c
595.045 359.863 595.243 359.428 595.639 359.110  c
596.035 358.792 596.571 358.634 597.248 358.634  c
597.602 358.634 598.045 358.680 598.576 358.774  c
598.811 358.821 l
598.811 359.790 l
598.165 359.592 597.654 359.493 597.279 359.493  c
596.529 359.493 596.154 359.764 596.154 360.305  c
596.154 360.649 596.436 360.941 596.998 361.180  c
597.561 361.415 l
598.186 361.686 598.631 361.967 598.896 362.259  c
599.162 362.550 599.295 362.920 599.295 363.368  c
599.295 363.920 599.074 364.376 598.631 364.735  c
598.188 365.095 597.623 365.274 596.936 365.274  c
h
601.365 365.134 m
601.365 358.774 l
602.521 358.774 l
602.521 365.134 l
601.365 365.134 l
h
601.365 357.618 m
601.365 356.462 l
602.521 356.462 l
602.521 357.618 l
601.365 357.618 l
h
606.521 365.274 m
605.990 365.274 605.350 365.154 604.600 364.915  c
604.600 363.852 l
605.350 364.227 606.006 364.415 606.568 364.415  c
606.902 364.415 607.178 364.324 607.396 364.141  c
607.615 363.959 607.725 363.733 607.725 363.462  c
607.725 363.076 607.417 362.753 606.803 362.493  c
606.131 362.196 l
605.131 361.790 604.631 361.196 604.631 360.415  c
604.631 359.863 604.829 359.428 605.225 359.110  c
605.620 358.792 606.157 358.634 606.834 358.634  c
607.188 358.634 607.631 358.680 608.162 358.774  c
608.396 358.821 l
608.396 359.790 l
607.751 359.592 607.240 359.493 606.865 359.493  c
606.115 359.493 605.740 359.764 605.740 360.305  c
605.740 360.649 606.021 360.941 606.584 361.180  c
607.146 361.415 l
607.771 361.686 608.217 361.967 608.482 362.259  c
608.748 362.550 608.881 362.920 608.881 363.368  c
608.881 363.920 608.660 364.376 608.217 364.735  c
607.774 365.095 607.209 365.274 606.521 365.274  c
h
f
newpath
567.505 379.096 m
567.505 370.425 l
572.349 370.425 l
572.349 371.346 l
568.724 371.346 l
568.724 374.128 l
571.755 374.128 l
571.755 375.034 l
568.724 375.034 l
568.724 378.175 l
572.599 378.175 l
572.599 379.096 l
567.505 379.096 l
h
574.040 379.096 m
574.040 372.737 l
575.196 372.737 l
575.196 373.925 l
575.800 373.039 576.545 372.596 577.431 372.596  c
577.983 372.596 578.423 372.771 578.751 373.120  c
579.079 373.469 579.243 373.935 579.243 374.518  c
579.243 379.096 l
578.087 379.096 l
578.087 374.893 l
578.087 374.425 578.017 374.089 577.876 373.886  c
577.735 373.682 577.509 373.581 577.196 373.581  c
576.488 373.581 575.821 374.044 575.196 374.971  c
575.196 379.096 l
574.040 379.096 l
h
581.503 381.206 m
581.644 380.206 l
582.310 380.529 582.966 380.690 583.612 380.690  c
584.914 380.690 585.565 379.998 585.565 378.612  c
585.565 377.612 l
585.138 378.508 584.440 378.956 583.472 378.956  c
582.711 378.956 582.107 378.677 581.659 378.120  c
581.211 377.563 580.987 376.815 580.987 375.878  c
580.987 374.909 581.243 374.120 581.753 373.511  c
582.263 372.901 582.925 372.596 583.737 372.596  c
584.446 372.596 585.055 372.883 585.565 373.456  c
585.565 372.737 l
586.737 372.737 l
586.737 377.362 l
586.737 378.362 586.685 379.102 586.581 379.581  c
586.477 380.060 586.279 380.451 585.987 380.753  c
585.487 381.284 584.706 381.550 583.644 381.550  c
582.904 381.550 582.190 381.435 581.503 381.206  c
h
585.565 376.893 m
585.565 374.253 l
585.065 373.721 584.513 373.456 583.909 373.456  c
583.378 373.456 582.961 373.669 582.659 374.096  c
582.357 374.524 582.206 375.107 582.206 375.846  c
582.206 377.242 582.701 377.940 583.690 377.940  c
584.357 377.940 584.982 377.591 585.565 376.893  c
h
588.970 379.096 m
588.970 372.737 l
590.126 372.737 l
590.126 379.096 l
588.970 379.096 l
h
588.970 371.581 m
588.970 370.425 l
590.126 370.425 l
590.126 371.581 l
588.970 371.581 l
h
592.438 379.096 m
592.438 372.737 l
593.595 372.737 l
593.595 373.925 l
594.199 373.039 594.944 372.596 595.829 372.596  c
596.381 372.596 596.821 372.771 597.149 373.120  c
597.478 373.469 597.642 373.935 597.642 374.518  c
597.642 379.096 l
596.485 379.096 l
596.485 374.893 l
596.485 374.425 596.415 374.089 596.274 373.886  c
596.134 373.682 595.907 373.581 595.595 373.581  c
594.886 373.581 594.220 374.044 593.595 374.971  c
593.595 379.096 l
592.438 379.096 l
h
604.542 378.893 m
603.771 379.123 603.110 379.237 602.558 379.237  c
601.620 379.237 600.857 378.927 600.269 378.307  c
599.680 377.688 599.386 376.878 599.386 375.878  c
599.386 374.919 599.646 374.130 600.167 373.511  c
600.688 372.891 601.354 372.581 602.167 372.581  c
602.938 372.581 603.532 372.854 603.948 373.401  c
604.365 373.948 604.573 374.727 604.573 375.737  c
604.573 376.096 l
600.558 376.096 l
600.724 377.607 601.464 378.362 602.776 378.362  c
603.256 378.362 603.844 378.232 604.542 377.971  c
604.542 378.893 l
h
600.604 375.221 m
603.417 375.221 l
603.417 374.044 602.974 373.456 602.089 373.456  c
601.203 373.456 600.709 374.044 600.604 375.221  c
h
f
0 J
1.45000 M
newpath
537.000 335.200 m
537.000 398.200 l
537.000 400.409 538.791 402.200 541.000 402.200  c
692.200 402.200 l
694.409 402.200 696.200 400.409 696.200 398.200  c
696.200 335.200 l
696.200 332.991 694.409 331.200 692.200 331.200  c
541.000 331.200 l
538.791 331.200 537.000 332.991 537.000 335.200  c
h
S
2 J
10.0000 M
q
2.00000 w
0 J
1.45000 M
newpath
181.478 258.920 m
145.728 213.000 181.478 172.000 240.108 201.520  c
240.108 172.000 337.348 172.000 337.348 201.520  c
395.978 172.000 431.728 213.000 395.978 249.080  c
431.728 295.000 395.978 336.000 351.648 306.480  c
337.348 336.000 240.108 336.000 254.408 306.480  c
181.478 336.000 145.728 295.000 181.478 258.920  c
h
S
1.00000 w
2 J
10.0000 M
newpath
252.687 271.561 m
249.458 272.540 246.698 273.030 244.406 273.030  c
240.500 273.030 237.312 271.733 234.844 269.139  c
232.375 266.545 231.140 263.181 231.140 259.045  c
231.140 255.025 232.229 251.728 234.406 249.155  c
236.583 246.582 239.364 245.295 242.750 245.295  c
245.948 245.295 248.422 246.436 250.172 248.717  c
251.922 250.999 252.797 254.238 252.797 258.436  c
252.781 259.920 l
236.062 259.920 l
236.760 266.222 239.844 269.374 245.312 269.374  c
247.312 269.374 249.771 268.837 252.687 267.764  c
252.687 271.561 l
h
236.281 256.311 m
247.969 256.311 l
247.969 251.374 246.130 248.905 242.453 248.905  c
238.755 248.905 236.698 251.374 236.281 256.311  c
h
288.106 271.436 m
283.731 272.696 279.914 273.327 276.653 273.327  c
270.914 273.327 266.510 271.691 263.442 268.420  c
260.375 265.150 258.841 260.462 258.841 254.358  c
258.841 248.368 260.393 243.709 263.497 240.381  c
266.601 237.053 270.960 235.389 276.575 235.389  c
280.263 235.389 284.091 235.931 288.059 237.014  c
288.059 241.749 l
283.080 240.061 279.263 239.217 276.606 239.217  c
272.700 239.217 269.669 240.543 267.513 243.194  c
265.356 245.845 264.278 249.582 264.278 254.405  c
264.278 259.176 265.434 262.881 267.747 265.522  c
270.059 268.163 273.299 269.483 277.466 269.483  c
279.174 269.483 281.018 269.186 282.997 268.592  c
282.997 256.827 l
288.106 256.827 l
288.106 271.436 l
h
307.614 273.030 m
303.822 273.030 300.794 271.772 298.528 269.256  c
296.263 266.741 295.130 263.379 295.130 259.170  c
295.130 254.900 296.265 251.525 298.536 249.045  c
300.807 246.566 303.890 245.327 307.786 245.327  c
311.671 245.327 314.750 246.566 317.020 249.045  c
319.291 251.525 320.427 254.879 320.427 259.108  c
320.427 263.441 319.289 266.845 317.013 269.319  c
314.737 271.793 311.604 273.030 307.614 273.030  c
h
307.692 269.420 m
312.786 269.420 315.333 265.983 315.333 259.108  c
315.333 252.327 312.817 248.936 307.786 248.936  c
302.776 248.936 300.270 252.347 300.270 259.170  c
300.270 266.004 302.744 269.420 307.692 269.420  c
h
333.436 272.420 m
323.577 245.905 l
328.389 245.905 l
336.108 266.530 l
344.233 245.905 l
348.733 245.905 l
338.249 272.420 l
333.436 272.420 l
h
f
Q
q
0 J
1.45000 M
newpath
507.000 232.700 m
508.800 218.500 565.200 218.500 567.000 232.700  c
567.000 275.300 l
565.200 289.500 508.800 289.500 507.000 275.300  c
h
S
newpath
567.000 232.700 m
565.200 246.900 508.800 246.900 507.000 232.700  c
S
2 J
10.0000 M
newpath
527.499 280.939 m
527.499 272.268 l
528.718 272.268 l
528.718 280.018 l
532.624 280.018 l
532.624 280.939 l
527.499 280.939 l
h
536.413 281.080 m
535.507 281.080 534.783 280.778 534.241 280.174  c
533.700 279.570 533.429 278.762 533.429 277.752  c
533.429 276.731 533.700 275.924 534.241 275.330  c
534.783 274.736 535.522 274.439 536.460 274.439  c
537.397 274.439 538.137 274.736 538.679 275.330  c
539.220 275.924 539.491 276.731 539.491 277.752  c
539.491 278.783 539.218 279.596 538.671 280.189  c
538.124 280.783 537.371 281.080 536.413 281.080  c
h
536.429 280.221 m
537.658 280.221 538.272 279.398 538.272 277.752  c
538.272 276.117 537.668 275.299 536.460 275.299  c
535.252 275.299 534.647 276.117 534.647 277.752  c
534.647 279.398 535.241 280.221 536.429 280.221  c
h
541.315 283.049 m
541.456 282.049 l
542.123 282.372 542.779 282.533 543.425 282.533  c
544.727 282.533 545.378 281.840 545.378 280.455  c
545.378 279.455 l
544.951 280.351 544.253 280.799 543.284 280.799  c
542.524 280.799 541.920 280.520 541.472 279.963  c
541.024 279.406 540.800 278.658 540.800 277.721  c
540.800 276.752 541.055 275.963 541.565 275.354  c
542.076 274.744 542.737 274.439 543.550 274.439  c
544.258 274.439 544.868 274.726 545.378 275.299  c
545.378 274.580 l
546.550 274.580 l
546.550 279.205 l
546.550 280.205 546.498 280.945 546.394 281.424  c
546.289 281.903 546.091 282.294 545.800 282.596  c
545.300 283.127 544.519 283.393 543.456 283.393  c
542.716 283.393 542.003 283.278 541.315 283.049  c
h
545.378 278.736 m
545.378 276.096 l
544.878 275.564 544.326 275.299 543.722 275.299  c
543.190 275.299 542.774 275.512 542.472 275.939  c
542.170 276.367 542.019 276.950 542.019 277.689  c
542.019 279.085 542.513 279.783 543.503 279.783  c
544.170 279.783 544.795 279.434 545.378 278.736  c
h
f
Q
q
0 J
1.45000 M
newpath
605.000 232.700 m
606.800 218.500 663.200 218.500 665.000 232.700  c
665.000 275.300 l
663.200 289.500 606.800 289.500 605.000 275.300  c
h
S
newpath
665.000 232.700 m
663.200 246.900 606.800 246.900 605.000 232.700  c
S
2 J
10.0000 M
Q
q
0 J
1.45000 M
0.00000 1.00000 0.00000 RG
newpath
475.000 120.000 m
584.000 120.000 l
584.000 172.000 l
475.000 172.000 l
h
f
0.00000 0.00000 0.00000 RG
newpath
475.000 120.000 m
584.000 120.000 l
584.000 172.000 l
475.000 172.000 l
h
S
2 J
10.0000 M
newpath
481.866 150.421 m
481.866 141.749 l
484.741 141.749 l
485.606 141.749 486.301 141.845 486.827 142.038  c
487.353 142.231 487.809 142.556 488.194 143.015  c
488.809 143.733 489.116 144.687 489.116 145.874  c
489.116 147.322 488.736 148.442 487.976 149.233  c
487.215 150.025 486.142 150.421 484.757 150.421  c
481.866 150.421 l
h
483.085 149.499 m
484.663 149.499 l
485.788 149.499 486.585 149.197 487.054 148.593  c
487.564 147.947 487.819 147.082 487.819 145.999  c
487.819 144.978 487.569 144.176 487.069 143.593  c
486.767 143.239 486.408 142.996 485.991 142.866  c
485.575 142.736 484.944 142.671 484.101 142.671  c
483.085 142.671 l
483.085 149.499 l
h
493.370 150.562 m
492.464 150.562 491.740 150.259 491.198 149.655  c
490.657 149.051 490.386 148.244 490.386 147.233  c
490.386 146.213 490.657 145.405 491.198 144.812  c
491.740 144.218 492.479 143.921 493.417 143.921  c
494.354 143.921 495.094 144.218 495.636 144.812  c
496.177 145.405 496.448 146.213 496.448 147.233  c
496.448 148.265 496.175 149.077 495.628 149.671  c
495.081 150.265 494.328 150.562 493.370 150.562  c
h
493.386 149.702 m
494.615 149.702 495.229 148.879 495.229 147.233  c
495.229 145.598 494.625 144.780 493.417 144.780  c
492.209 144.780 491.604 145.598 491.604 147.233  c
491.604 148.879 492.198 149.702 493.386 149.702  c
h
498.257 150.421 m
498.257 144.062 l
499.413 144.062 l
499.413 145.249 l
499.976 144.364 500.700 143.921 501.585 143.921  c
502.429 143.921 503.007 144.364 503.319 145.249  c
503.861 144.353 504.569 143.905 505.444 143.905  c
506.007 143.905 506.444 144.072 506.757 144.405  c
507.069 144.739 507.226 145.202 507.226 145.796  c
507.226 150.421 l
506.054 150.421 l
506.054 145.968 l
506.054 145.249 505.767 144.890 505.194 144.890  c
504.601 144.890 503.976 145.312 503.319 146.155  c
503.319 150.421 l
502.163 150.421 l
502.163 145.968 l
502.163 145.239 501.866 144.874 501.272 144.874  c
500.700 144.874 500.080 145.301 499.413 146.155  c
499.413 150.421 l
498.257 150.421 l
h
512.741 149.608 m
512.054 150.244 511.387 150.562 510.741 150.562  c
510.210 150.562 509.772 150.397 509.429 150.069  c
509.085 149.741 508.913 149.327 508.913 148.827  c
508.913 148.129 509.205 147.593 509.788 147.218  c
510.371 146.843 511.205 146.655 512.288 146.655  c
512.569 146.655 l
512.569 145.890 l
512.569 145.150 512.189 144.780 511.429 144.780  c
510.825 144.780 510.168 144.968 509.460 145.343  c
509.460 144.390 l
510.241 144.077 510.970 143.921 511.647 143.921  c
512.356 143.921 512.879 144.080 513.218 144.397  c
513.556 144.715 513.726 145.213 513.726 145.890  c
513.726 148.780 l
513.726 149.437 513.929 149.765 514.335 149.765  c
514.387 149.765 514.460 149.754 514.554 149.733  c
514.632 150.374 l
514.371 150.499 514.085 150.562 513.772 150.562  c
513.231 150.562 512.887 150.244 512.741 149.608  c
h
512.569 148.983 m
512.569 147.343 l
512.179 147.327 l
511.554 147.327 511.046 147.447 510.655 147.687  c
510.265 147.926 510.069 148.244 510.069 148.640  c
510.069 148.910 510.166 149.142 510.358 149.335  c
510.551 149.528 510.788 149.624 511.069 149.624  c
511.549 149.624 512.049 149.410 512.569 148.983  c
h
516.087 150.421 m
516.087 144.062 l
517.243 144.062 l
517.243 150.421 l
516.087 150.421 l
h
516.087 142.905 m
516.087 141.749 l
517.243 141.749 l
517.243 142.905 l
516.087 142.905 l
h
519.556 150.421 m
519.556 144.062 l
520.712 144.062 l
520.712 145.249 l
521.316 144.364 522.061 143.921 522.946 143.921  c
523.498 143.921 523.938 144.095 524.267 144.444  c
524.595 144.793 524.759 145.259 524.759 145.843  c
524.759 150.421 l
523.603 150.421 l
523.603 146.218 l
523.603 145.749 523.532 145.413 523.392 145.210  c
523.251 145.007 523.024 144.905 522.712 144.905  c
522.004 144.905 521.337 145.369 520.712 146.296  c
520.712 150.421 l
519.556 150.421 l
h
537.284 150.187 m
536.232 150.489 535.315 150.640 534.534 150.640  c
533.149 150.640 532.089 150.246 531.354 149.460  c
530.620 148.674 530.253 147.546 530.253 146.077  c
530.253 144.640 530.625 143.522 531.370 142.726  c
532.115 141.929 533.164 141.530 534.519 141.530  c
535.394 141.530 536.310 141.660 537.269 141.921  c
537.269 143.062 l
536.071 142.655 535.154 142.452 534.519 142.452  c
533.581 142.452 532.854 142.770 532.339 143.405  c
531.823 144.041 531.565 144.937 531.565 146.093  c
531.565 147.239 531.841 148.129 532.394 148.765  c
532.946 149.400 533.722 149.718 534.722 149.718  c
535.138 149.718 535.581 149.645 536.050 149.499  c
536.050 146.671 l
537.284 146.671 l
537.284 150.187 l
h
542.753 149.608 m
542.065 150.244 541.399 150.562 540.753 150.562  c
540.222 150.562 539.784 150.397 539.440 150.069  c
539.097 149.741 538.925 149.327 538.925 148.827  c
538.925 148.129 539.216 147.593 539.800 147.218  c
540.383 146.843 541.216 146.655 542.300 146.655  c
542.581 146.655 l
542.581 145.890 l
542.581 145.150 542.201 144.780 541.440 144.780  c
540.836 144.780 540.180 144.968 539.472 145.343  c
539.472 144.390 l
540.253 144.077 540.982 143.921 541.659 143.921  c
542.368 143.921 542.891 144.080 543.229 144.397  c
543.568 144.715 543.737 145.213 543.737 145.890  c
543.737 148.780 l
543.737 149.437 543.940 149.765 544.347 149.765  c
544.399 149.765 544.472 149.754 544.565 149.733  c
544.644 150.374 l
544.383 150.499 544.097 150.562 543.784 150.562  c
543.243 150.562 542.899 150.244 542.753 149.608  c
h
542.581 148.983 m
542.581 147.343 l
542.190 147.327 l
541.565 147.327 541.058 147.447 540.667 147.687  c
540.276 147.926 540.081 148.244 540.081 148.640  c
540.081 148.910 540.177 149.142 540.370 149.335  c
540.563 149.528 540.800 149.624 541.081 149.624  c
541.560 149.624 542.060 149.410 542.581 148.983  c
h
548.005 150.562 m
547.422 150.562 546.966 150.395 546.638 150.062  c
546.310 149.728 546.146 149.259 546.146 148.655  c
546.146 144.921 l
545.349 144.921 l
545.349 144.062 l
546.146 144.062 l
546.146 142.905 l
547.302 142.796 l
547.302 144.062 l
548.958 144.062 l
548.958 144.921 l
547.302 144.921 l
547.302 148.452 l
547.302 149.285 547.661 149.702 548.380 149.702  c
548.526 149.702 548.708 149.676 548.927 149.624  c
548.927 150.421 l
548.573 150.515 548.265 150.562 548.005 150.562  c
h
555.243 150.218 m
554.472 150.447 553.811 150.562 553.259 150.562  c
552.321 150.562 551.558 150.252 550.970 149.632  c
550.381 149.012 550.087 148.202 550.087 147.202  c
550.087 146.244 550.347 145.455 550.868 144.835  c
551.389 144.215 552.056 143.905 552.868 143.905  c
553.639 143.905 554.233 144.179 554.649 144.726  c
555.066 145.272 555.274 146.051 555.274 147.062  c
555.274 147.421 l
551.259 147.421 l
551.425 148.931 552.165 149.687 553.478 149.687  c
553.957 149.687 554.545 149.556 555.243 149.296  c
555.243 150.218 l
h
551.306 146.546 m
554.118 146.546 l
554.118 145.369 553.675 144.780 552.790 144.780  c
551.905 144.780 551.410 145.369 551.306 146.546  c
h
558.007 150.421 m
556.194 144.062 l
557.319 144.062 l
558.710 148.983 l
560.226 144.062 l
561.366 144.062 l
562.694 148.983 l
564.288 144.062 l
565.288 144.062 l
563.210 150.421 l
562.054 150.421 l
560.694 145.499 l
559.179 150.421 l
558.007 150.421 l
h
569.800 149.608 m
569.112 150.244 568.446 150.562 567.800 150.562  c
567.269 150.562 566.831 150.397 566.487 150.069  c
566.144 149.741 565.972 149.327 565.972 148.827  c
565.972 148.129 566.263 147.593 566.847 147.218  c
567.430 146.843 568.263 146.655 569.347 146.655  c
569.628 146.655 l
569.628 145.890 l
569.628 145.150 569.248 144.780 568.487 144.780  c
567.883 144.780 567.227 144.968 566.519 145.343  c
566.519 144.390 l
567.300 144.077 568.029 143.921 568.706 143.921  c
569.414 143.921 569.938 144.080 570.276 144.397  c
570.615 144.715 570.784 145.213 570.784 145.890  c
570.784 148.780 l
570.784 149.437 570.987 149.765 571.394 149.765  c
571.446 149.765 571.519 149.754 571.612 149.733  c
571.690 150.374 l
571.430 150.499 571.144 150.562 570.831 150.562  c
570.289 150.562 569.946 150.244 569.800 149.608  c
h
569.628 148.983 m
569.628 147.343 l
569.237 147.327 l
568.612 147.327 568.104 147.447 567.714 147.687  c
567.323 147.926 567.128 148.244 567.128 148.640  c
567.128 148.910 567.224 149.142 567.417 149.335  c
567.610 149.528 567.847 149.624 568.128 149.624  c
568.607 149.624 569.107 149.410 569.628 148.983  c
h
573.521 152.733 m
574.552 150.421 l
572.083 144.062 l
573.333 144.062 l
575.161 148.843 l
577.099 144.062 l
578.192 144.062 l
574.708 152.733 l
573.521 152.733 l
h
f
Q
q
0 J
1.45000 M
newpath
605.000 120.000 m
685.000 120.000 l
685.000 172.000 l
605.000 172.000 l
h
S
2 J
10.0000 M
newpath
617.303 143.658 m
615.959 143.658 614.920 143.262 614.186 142.471  c
613.451 141.679 613.084 140.559 613.084 139.111  c
613.084 137.663 613.459 136.541 614.209 135.744  c
614.959 134.947 616.011 134.549 617.365 134.549  c
618.146 134.549 619.058 134.674 620.100 134.924  c
620.100 136.080 l
618.912 135.674 617.995 135.471 617.350 135.471  c
616.412 135.471 615.686 135.788 615.170 136.424  c
614.654 137.059 614.396 137.960 614.396 139.127  c
614.396 140.231 614.670 141.101 615.217 141.736  c
615.764 142.372 616.516 142.689 617.475 142.689  c
618.298 142.689 619.178 142.439 620.115 141.939  c
620.115 142.986 l
619.261 143.434 618.324 143.658 617.303 143.658  c
h
624.418 143.580 m
623.512 143.580 622.788 143.278 622.246 142.674  c
621.704 142.070 621.434 141.262 621.434 140.252  c
621.434 139.231 621.704 138.424 622.246 137.830  c
622.788 137.236 623.527 136.939 624.465 136.939  c
625.402 136.939 626.142 137.236 626.684 137.830  c
627.225 138.424 627.496 139.231 627.496 140.252  c
627.496 141.283 627.223 142.096 626.676 142.689  c
626.129 143.283 625.376 143.580 624.418 143.580  c
h
624.434 142.721 m
625.663 142.721 626.277 141.898 626.277 140.252  c
626.277 138.617 625.673 137.799 624.465 137.799  c
623.257 137.799 622.652 138.617 622.652 140.252  c
622.652 141.898 623.246 142.721 624.434 142.721  c
h
629.305 143.439 m
629.305 137.080 l
630.461 137.080 l
630.461 138.268 l
630.919 137.382 631.581 136.939 632.445 136.939  c
632.570 136.939 632.695 136.950 632.820 136.971  c
632.820 138.049 l
632.622 137.976 632.445 137.939 632.289 137.939  c
631.560 137.939 630.951 138.372 630.461 139.236  c
630.461 143.439 l
629.305 143.439 l
h
634.215 143.439 m
634.215 137.080 l
635.371 137.080 l
635.371 138.268 l
635.829 137.382 636.491 136.939 637.355 136.939  c
637.480 136.939 637.605 136.950 637.730 136.971  c
637.730 138.049 l
637.533 137.976 637.355 137.939 637.199 137.939  c
636.470 137.939 635.861 138.372 635.371 139.236  c
635.371 143.439 l
634.215 143.439 l
h
643.781 143.236 m
643.010 143.465 642.349 143.580 641.797 143.580  c
640.859 143.580 640.096 143.270 639.508 142.650  c
638.919 142.031 638.625 141.221 638.625 140.221  c
638.625 139.262 638.885 138.473 639.406 137.854  c
639.927 137.234 640.594 136.924 641.406 136.924  c
642.177 136.924 642.771 137.197 643.188 137.744  c
643.604 138.291 643.812 139.070 643.812 140.080  c
643.812 140.439 l
639.797 140.439 l
639.964 141.950 640.703 142.705 642.016 142.705  c
642.495 142.705 643.083 142.575 643.781 142.314  c
643.781 143.236 l
h
639.844 139.564 m
642.656 139.564 l
642.656 138.387 642.214 137.799 641.328 137.799  c
640.443 137.799 639.948 138.387 639.844 139.564  c
h
645.811 143.439 m
645.811 134.189 l
646.967 134.189 l
646.967 143.439 l
645.811 143.439 l
h
652.561 142.627 m
651.873 143.262 651.206 143.580 650.561 143.580  c
650.029 143.580 649.592 143.416 649.248 143.088  c
648.904 142.760 648.732 142.346 648.732 141.846  c
648.732 141.148 649.024 140.611 649.607 140.236  c
650.191 139.861 651.024 139.674 652.107 139.674  c
652.389 139.674 l
652.389 138.908 l
652.389 138.169 652.008 137.799 651.248 137.799  c
650.644 137.799 649.988 137.986 649.279 138.361  c
649.279 137.408 l
650.061 137.096 650.790 136.939 651.467 136.939  c
652.175 136.939 652.699 137.098 653.037 137.416  c
653.376 137.734 653.545 138.231 653.545 138.908  c
653.545 141.799 l
653.545 142.455 653.748 142.783 654.154 142.783  c
654.206 142.783 654.279 142.773 654.373 142.752  c
654.451 143.393 l
654.191 143.518 653.904 143.580 653.592 143.580  c
653.050 143.580 652.706 143.262 652.561 142.627  c
h
652.389 142.002 m
652.389 140.361 l
651.998 140.346 l
651.373 140.346 650.865 140.465 650.475 140.705  c
650.084 140.945 649.889 141.262 649.889 141.658  c
649.889 141.929 649.985 142.161 650.178 142.354  c
650.370 142.546 650.607 142.643 650.889 142.643  c
651.368 142.643 651.868 142.429 652.389 142.002  c
h
657.812 143.580 m
657.229 143.580 656.773 143.413 656.445 143.080  c
656.117 142.747 655.953 142.278 655.953 141.674  c
655.953 137.939 l
655.156 137.939 l
655.156 137.080 l
655.953 137.080 l
655.953 135.924 l
657.109 135.814 l
657.109 137.080 l
658.766 137.080 l
658.766 137.939 l
657.109 137.939 l
657.109 141.471 l
657.109 142.304 657.469 142.721 658.188 142.721  c
658.333 142.721 658.516 142.695 658.734 142.643  c
658.734 143.439 l
658.380 143.533 658.073 143.580 657.812 143.580  c
h
660.395 143.439 m
660.395 137.080 l
661.551 137.080 l
661.551 143.439 l
660.395 143.439 l
h
660.395 135.924 m
660.395 134.768 l
661.551 134.768 l
661.551 135.924 l
660.395 135.924 l
h
666.348 143.580 m
665.441 143.580 664.717 143.278 664.176 142.674  c
663.634 142.070 663.363 141.262 663.363 140.252  c
663.363 139.231 663.634 138.424 664.176 137.830  c
664.717 137.236 665.457 136.939 666.395 136.939  c
667.332 136.939 668.072 137.236 668.613 137.830  c
669.155 138.424 669.426 139.231 669.426 140.252  c
669.426 141.283 669.152 142.096 668.605 142.689  c
668.059 143.283 667.306 143.580 666.348 143.580  c
h
666.363 142.721 m
667.592 142.721 668.207 141.898 668.207 140.252  c
668.207 138.617 667.603 137.799 666.395 137.799  c
665.186 137.799 664.582 138.617 664.582 140.252  c
664.582 141.898 665.176 142.721 666.363 142.721  c
h
671.234 143.439 m
671.234 137.080 l
672.391 137.080 l
672.391 138.268 l
672.995 137.382 673.740 136.939 674.625 136.939  c
675.177 136.939 675.617 137.114 675.945 137.463  c
676.273 137.812 676.438 138.278 676.438 138.861  c
676.438 143.439 l
675.281 143.439 l
675.281 139.236 l
675.281 138.768 675.211 138.432 675.070 138.229  c
674.930 138.025 674.703 137.924 674.391 137.924  c
673.682 137.924 673.016 138.387 672.391 139.314  c
672.391 143.439 l
671.234 143.439 l
h
f
newpath
626.607 157.402 m
626.607 148.730 l
631.451 148.730 l
631.451 149.652 l
627.826 149.652 l
627.826 152.434 l
630.857 152.434 l
630.857 153.340 l
627.826 153.340 l
627.826 156.480 l
631.701 156.480 l
631.701 157.402 l
626.607 157.402 l
h
633.143 157.402 m
633.143 151.043 l
634.299 151.043 l
634.299 152.230 l
634.903 151.345 635.648 150.902 636.533 150.902  c
637.085 150.902 637.525 151.077 637.854 151.426  c
638.182 151.775 638.346 152.241 638.346 152.824  c
638.346 157.402 l
637.189 157.402 l
637.189 153.199 l
637.189 152.730 637.119 152.395 636.979 152.191  c
636.838 151.988 636.611 151.887 636.299 151.887  c
635.590 151.887 634.924 152.350 634.299 153.277  c
634.299 157.402 l
633.143 157.402 l
h
640.605 159.512 m
640.746 158.512 l
641.413 158.835 642.069 158.996 642.715 158.996  c
644.017 158.996 644.668 158.303 644.668 156.918  c
644.668 155.918 l
644.241 156.814 643.543 157.262 642.574 157.262  c
641.814 157.262 641.210 156.983 640.762 156.426  c
640.314 155.868 640.090 155.121 640.090 154.184  c
640.090 153.215 640.345 152.426 640.855 151.816  c
641.366 151.207 642.027 150.902 642.840 150.902  c
643.548 150.902 644.158 151.189 644.668 151.762  c
644.668 151.043 l
645.840 151.043 l
645.840 155.668 l
645.840 156.668 645.788 157.408 645.684 157.887  c
645.579 158.366 645.382 158.757 645.090 159.059  c
644.590 159.590 643.809 159.855 642.746 159.855  c
642.007 159.855 641.293 159.741 640.605 159.512  c
h
644.668 155.199 m
644.668 152.559 l
644.168 152.027 643.616 151.762 643.012 151.762  c
642.480 151.762 642.064 151.975 641.762 152.402  c
641.460 152.829 641.309 153.413 641.309 154.152  c
641.309 155.548 641.803 156.246 642.793 156.246  c
643.460 156.246 644.085 155.897 644.668 155.199  c
h
648.072 157.402 m
648.072 151.043 l
649.229 151.043 l
649.229 157.402 l
648.072 157.402 l
h
648.072 149.887 m
648.072 148.730 l
649.229 148.730 l
649.229 149.887 l
648.072 149.887 l
h
651.541 157.402 m
651.541 151.043 l
652.697 151.043 l
652.697 152.230 l
653.301 151.345 654.046 150.902 654.932 150.902  c
655.484 150.902 655.924 151.077 656.252 151.426  c
656.580 151.775 656.744 152.241 656.744 152.824  c
656.744 157.402 l
655.588 157.402 l
655.588 153.199 l
655.588 152.730 655.518 152.395 655.377 152.191  c
655.236 151.988 655.010 151.887 654.697 151.887  c
653.989 151.887 653.322 152.350 652.697 153.277  c
652.697 157.402 l
651.541 157.402 l
h
663.645 157.199 m
662.874 157.428 662.212 157.543 661.660 157.543  c
660.723 157.543 659.960 157.233 659.371 156.613  c
658.783 155.993 658.488 155.184 658.488 154.184  c
658.488 153.225 658.749 152.436 659.270 151.816  c
659.790 151.197 660.457 150.887 661.270 150.887  c
662.040 150.887 662.634 151.160 663.051 151.707  c
663.467 152.254 663.676 153.033 663.676 154.043  c
663.676 154.402 l
659.660 154.402 l
659.827 155.913 660.566 156.668 661.879 156.668  c
662.358 156.668 662.947 156.538 663.645 156.277  c
663.645 157.199 l
h
659.707 153.527 m
662.520 153.527 l
662.520 152.350 662.077 151.762 661.191 151.762  c
660.306 151.762 659.811 152.350 659.707 153.527  c
h
f
Q
0 J
1.45000 M
newpath
739.880 139.000 m
791.880 139.000 l
791.880 154.000 l
806.880 154.000 l
806.880 172.000 l
739.880 172.000 l
h
S
newpath
791.880 139.000 m
791.880 154.000 l
806.880 154.000 l
h
S
2 J
10.0000 M
newpath
757.120 152.939 m
759.995 148.580 l
757.261 144.268 l
758.714 144.268 l
760.808 147.533 l
762.995 144.268 l
764.151 144.268 l
761.386 148.455 l
764.230 152.939 l
762.776 152.939 l
760.573 149.502 l
758.292 152.939 l
757.120 152.939 l
h
765.663 152.939 m
765.663 144.268 l
768.023 144.268 l
769.064 144.268 769.814 144.445 770.273 144.799  c
770.731 145.153 770.960 145.731 770.960 146.533  c
770.960 147.460 770.648 148.184 770.023 148.705  c
769.398 149.226 768.533 149.486 767.429 149.486  c
766.882 149.486 l
766.882 152.939 l
765.663 152.939 l
h
766.882 148.564 m
767.382 148.564 l
768.111 148.564 768.674 148.395 769.069 148.057  c
769.465 147.718 769.663 147.242 769.663 146.627  c
769.663 146.117 769.507 145.749 769.194 145.525  c
768.882 145.301 768.361 145.189 767.632 145.189  c
766.882 145.189 l
766.882 148.564 l
h
775.609 152.127 m
774.921 152.762 774.254 153.080 773.609 153.080  c
773.077 153.080 772.640 152.916 772.296 152.588  c
771.952 152.260 771.780 151.846 771.780 151.346  c
771.780 150.648 772.072 150.111 772.655 149.736  c
773.239 149.361 774.072 149.174 775.155 149.174  c
775.437 149.174 l
775.437 148.408 l
775.437 147.669 775.056 147.299 774.296 147.299  c
773.692 147.299 773.036 147.486 772.327 147.861  c
772.327 146.908 l
773.109 146.596 773.838 146.439 774.515 146.439  c
775.223 146.439 775.747 146.598 776.085 146.916  c
776.424 147.234 776.593 147.731 776.593 148.408  c
776.593 151.299 l
776.593 151.955 776.796 152.283 777.202 152.283  c
777.254 152.283 777.327 152.273 777.421 152.252  c
777.499 152.893 l
777.239 153.018 776.952 153.080 776.640 153.080  c
776.098 153.080 775.754 152.762 775.609 152.127  c
h
775.437 151.502 m
775.437 149.861 l
775.046 149.846 l
774.421 149.846 773.913 149.965 773.523 150.205  c
773.132 150.445 772.937 150.762 772.937 151.158  c
772.937 151.429 773.033 151.661 773.226 151.854  c
773.418 152.046 773.655 152.143 773.937 152.143  c
774.416 152.143 774.916 151.929 775.437 151.502  c
h
780.860 153.080 m
780.277 153.080 779.821 152.913 779.493 152.580  c
779.165 152.247 779.001 151.778 779.001 151.174  c
779.001 147.439 l
778.204 147.439 l
778.204 146.580 l
779.001 146.580 l
779.001 145.424 l
780.157 145.314 l
780.157 146.580 l
781.814 146.580 l
781.814 147.439 l
780.157 147.439 l
780.157 150.971 l
780.157 151.804 780.517 152.221 781.235 152.221  c
781.381 152.221 781.564 152.195 781.782 152.143  c
781.782 152.939 l
781.428 153.033 781.121 153.080 780.860 153.080  c
h
783.443 152.939 m
783.443 143.689 l
784.599 143.689 l
784.599 147.768 l
785.203 146.882 785.948 146.439 786.833 146.439  c
787.385 146.439 787.825 146.614 788.153 146.963  c
788.482 147.312 788.646 147.778 788.646 148.361  c
788.646 152.939 l
787.489 152.939 l
787.489 148.736 l
787.489 148.268 787.419 147.932 787.278 147.729  c
787.138 147.525 786.911 147.424 786.599 147.424  c
785.890 147.424 785.224 147.887 784.599 148.814  c
784.599 152.939 l
783.443 152.939 l
h
f
newpath
764.110 166.902 m
764.110 158.230 l
765.267 158.230 l
765.267 162.496 l
768.767 158.230 l
770.001 158.230 l
766.610 162.371 l
770.610 166.902 l
769.048 166.902 l
765.267 162.512 l
765.267 166.902 l
764.110 166.902 l
h
776.632 166.699 m
775.861 166.928 775.200 167.043 774.648 167.043  c
773.710 167.043 772.947 166.733 772.359 166.113  c
771.770 165.493 771.476 164.684 771.476 163.684  c
771.476 162.725 771.736 161.936 772.257 161.316  c
772.778 160.697 773.444 160.387 774.257 160.387  c
775.028 160.387 775.622 160.660 776.038 161.207  c
776.455 161.754 776.663 162.533 776.663 163.543  c
776.663 163.902 l
772.648 163.902 l
772.814 165.413 773.554 166.168 774.866 166.168  c
775.345 166.168 775.934 166.038 776.632 165.777  c
776.632 166.699 l
h
772.694 163.027 m
775.507 163.027 l
775.507 161.850 775.064 161.262 774.179 161.262  c
773.293 161.262 772.799 161.850 772.694 163.027  c
h
779.036 169.215 m
780.068 166.902 l
777.599 160.543 l
778.849 160.543 l
780.677 165.324 l
782.614 160.543 l
783.708 160.543 l
780.224 169.215 l
779.036 169.215 l
h
f
newpath
637.000 372.024 m
637.000 360.461 l
640.141 360.461 l
641.536 360.461 642.539 360.696 643.148 361.164  c
643.758 361.633 644.062 362.409 644.062 363.492  c
644.062 364.722 643.646 365.685 642.812 366.383  c
641.979 367.081 640.823 367.430 639.344 367.430  c
638.625 367.430 l
638.625 372.024 l
637.000 372.024 l
h
638.625 366.180 m
639.281 366.180 l
640.260 366.180 641.016 365.956 641.547 365.508  c
642.078 365.060 642.344 364.430 642.344 363.617  c
642.344 362.919 642.135 362.422 641.719 362.125  c
641.302 361.828 640.604 361.680 639.625 361.680  c
638.625 361.680 l
638.625 366.180 l
h
645.891 372.024 m
645.891 363.539 l
647.422 363.539 l
647.422 365.133 l
648.036 363.946 648.922 363.352 650.078 363.352  c
650.234 363.352 650.401 363.362 650.578 363.383  c
650.578 364.821 l
650.307 364.737 650.073 364.696 649.875 364.696  c
648.896 364.696 648.078 365.274 647.422 366.430  c
647.422 372.024 l
645.891 372.024 l
h
655.750 372.227 m
654.542 372.227 653.576 371.823 652.852 371.016  c
652.128 370.209 651.766 369.128 651.766 367.774  c
651.766 366.409 652.128 365.331 652.852 364.539  c
653.576 363.748 654.562 363.352 655.812 363.352  c
657.052 363.352 658.036 363.748 658.766 364.539  c
659.495 365.331 659.859 366.404 659.859 367.758  c
659.859 369.143 659.495 370.235 658.766 371.031  c
658.036 371.828 657.031 372.227 655.750 372.227  c
h
655.781 371.055 m
657.406 371.055 658.219 369.956 658.219 367.758  c
658.219 365.591 657.417 364.508 655.812 364.508  c
654.208 364.508 653.406 365.597 653.406 367.774  c
653.406 369.961 654.198 371.055 655.781 371.055  c
h
662.219 372.024 m
662.219 360.461 l
664.484 360.461 l
667.688 369.399 l
670.984 360.461 l
673.016 360.461 l
673.016 372.024 l
671.484 372.024 l
671.484 362.617 l
668.297 371.242 l
666.719 371.242 l
663.625 362.586 l
663.625 372.024 l
662.219 372.024 l
h
f
0 J
1.45000 M
newpath
685.000 366.129 m
685.000 380.489 671.569 392.129 655.000 392.129  c
638.431 392.129 625.000 380.489 625.000 366.129  c
625.000 351.770 638.431 340.129 655.000 340.129  c
671.569 340.129 685.000 351.770 685.000 366.129  c
h
S
2 J
10.0000 M
q
q
[ 51.0000 0.00000 0.00000 59.0000 407.000 95.0000 ] concat
<<
/ImageType 1
/Width 51  /Height 59
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [51 0 0 59 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0Rk>ENp'F!FhIifW5f0P!7S"*0t-Kf3\bC2=Xe28YV,Qq?5Re).E4WR:iHg^9mH$Li8TYUR4?Rtp?
259V2;*s4:q>':>l1+<6h[C#+&+N#FG#*bOLJ\CB#i+=phqm3r?XI/G?!UcC?<gb1laIYsT'E*6Hd`@f
/4:BAic''aG'n[bE,`%j\+`Z%qtp8GLPOU0cd.a';ucTe(ID!76BjJj3C.8(H[C0hI:Zu$EH1O;$C7!D
ZtT1J8NgqLmdAA&1N\sf&k\+7d`092!crF(;c?U.',+kc@t.M:\!H:Cl1t/NjlPUKbt[h*:JZs-6Pm;$
#:kP6nY;kSXfX1uc-FUpO,o?\N!p1+p@n<2ahb^o!s:nX6_gEO(a;bkSXgd27CHFU,(dXgQO("'Y[G$#
iF)lcqYJ@rEiE%7Z[u'ZNP3$=8>;(b<J?f^]P!hFEsl%2$!(kPq]]T3lNWtGl628uHIT8;40gNpkf.Q-
d4m@cc+k9m?r!e*Len3\9##"P_@:T6XM"m&DKM)H2`E[1?"]mc[H&Ifns)4LKbYU@V,iD+FL[$BnsA7`
)0m\OS]MU4P_0UqS1JOS<NKq4Q_]1Ab*i19]"0@e,G=F]QK07%+Ncuk1/+qKm<be.MOWQ-B*Mp8#R$k(
dDB0I'lpQL">O#,cL>TOI"%(5M-C<8d1d/F`4bP!/P6-nW89Y??A2Y#b3GTSr)+&t?6cs+dJ/8o3HfUj
f*T;GXV8mu;2MMC3Q378Y+X:ne+7X8T#M&-L)?DMAt-FV4X6Dtf+#YH9P65<k%nB>7r&:/T=tPYE2t/u
.Bp7hV@)"*lS],[$mp08N:LR:D-)OIbpFecPKcLn7:P5'Ku+kM;'M&60mGc7`Xi:YDA3O(FA0np>pgs7
*>;@%'^DJr'X=fo1+CdT-u1u35De#d\Zf<h`$-oJX/c3Y1!/P(Cl=\+L)B.LW&fkMYuE?E+I.j5YYk=`
$eIpPW>r=8Pr]lDZKaP-$1Z7XdB"g/c(UV47"GeVp;e21G+;1IG['naSIP*Ii?k3iLX#D;bh)kaLuTqE
UakQ6Y09f>gHET"NjDW_@0W$Rb@+"o33:SCf]4k"GLa^<?%XG4L,^jG1.HOJj:Ep!>+=EiWiiX9H^8Um
:kB\'%cVZl(e>GO\OeW5Lhm]^r!gCn8i`+ld)s.Cf?DH4aOS,WU.R7Hj#!ps%0<SW!@cQlr#0SBa%?p1
:ANm%mNkqI2qS\dVDpkJ]*ua^JIi;!=YAnqU=>[K0&g.c=P95f8p2Y%f,_USV71@D-%9fkG;fk21fgfF
-rJuI)\Kno`NJn_Li7Z6HHEk:i>-@Dk*K,/""U)^DnCEXjPP4h7:`k\&Yp.BERjM;LlJp4RGSthmd3D-
:UUlILVXBd)=X=49"#iI\_V[6"@K6XIO0f;ns`l\gdiem/P6JQ.s)F>poQu=Te/li@KUN2X7uCl'&TAC
Jik?MqM$%3(shJ<$C2@_?ba!VmO:ad67=j-ll1B'S6eaAT&lIk)"J`2q\An.7D#IS;V-W&b:Pnu>)r,,
9HOuOnMsIYV]S:*&]:LTO#_Uc#MA0$'7Md)!X/oF-r?R%JNEQ1`pLlN~>
Q
0 J
1.45000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [415.0 103.0 445.0 133.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
445.000 118.000 m
445.000 126.284 438.284 133.000 430.000 133.000  c
421.716 133.000 415.000 126.284 415.000 118.000  c
415.000 109.716 421.716 103.000 430.000 103.000  c
438.284 103.000 445.000 109.716 445.000 118.000  c
h
f
.152941 .682353 .152941 RG
newpath
445.000 118.000 m
445.000 126.284 438.284 133.000 430.000 133.000  c
421.716 133.000 415.000 126.284 415.000 118.000  c
415.000 109.716 421.716 103.000 430.000 103.000  c
438.284 103.000 445.000 109.716 445.000 118.000  c
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [415.0 103.0 445.0 133.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
422.472 112.981 m
437.528 112.981 l
437.528 123.019 l
422.472 123.019 l
422.472 112.981 l
h
f
0.00000 0.00000 0.00000 RG
newpath
422.472 112.981 m
437.528 112.981 l
437.528 123.019 l
422.472 123.019 l
422.472 112.981 l
h
S
newpath
422.472 112.981 m
430.000 119.255 l
437.528 112.981 l
S
Q
0 J
1.45000 M
newpath
323.077 185.318 m
386.500 135.369 l
467.024 141.355 l
S
newpath
475.002 141.949 m
463.406 136.073 l
466.027 141.281 l
462.665 146.045 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
393.838 195.231 m
468.144 150.150 l
S
newpath
474.984 146.000 m
462.131 147.950 l
467.289 150.668 l
467.318 156.499 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
529.500 172.002 m
529.500 214.394 l
S
newpath
529.500 222.394 m
534.500 210.394 l
529.500 213.394 l
524.500 210.394 l
h
f
2 J
10.0000 M
7.00000 w
0 J
1.45000 M
newpath
733.886 154.180 m
712.901 151.380 l
S
newpath
693.820 148.834 m
713.247 162.019 l
716.024 141.204 l
h
f
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF

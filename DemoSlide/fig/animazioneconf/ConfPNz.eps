%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 365 575 426
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, March 22, 2012 1:59:49 AM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
1053 113 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1053.00 0.00000 l
1053.00 113.000 l
0.00000 113.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 1053 113 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -394.000 -1166.00 ] concat
1.00000 1.00000 1.00000 RG
newpath
394.000 1166.00 m
1447.00 1166.00 l
1447.00 1279.00 l
394.000 1279.00 l
394.000 1166.00 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -394.000 -1166.00 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -394.000 -1166.00 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -394.000 -1166.00 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
659.804 1190.25 m
656.112 1180.91 l
652.406 1190.25 l
h
663.056 1198.54 m
660.697 1192.54 l
651.513 1192.54 l
649.125 1198.54 l
646.268 1198.54 l
654.867 1176.86 l
657.914 1176.86 l
666.381 1198.54 l
h
672.899 1198.54 m
666.981 1182.63 l
669.867 1182.63 l
674.496 1195.01 l
679.374 1182.63 l
682.069 1182.63 l
675.785 1198.54 l
h
688.427 1198.54 m
682.509 1182.63 l
685.394 1182.63 l
690.023 1195.01 l
694.901 1182.63 l
697.597 1182.63 l
691.312 1198.54 l
h
700.658 1198.54 m
700.658 1182.63 l
703.544 1182.63 l
703.544 1198.54 l
h
700.658 1179.75 m
700.658 1176.86 l
703.544 1176.86 l
703.544 1179.75 l
h
715.556 1198.91 m
713.280 1198.91 711.464 1198.15 710.106 1196.64  c
708.749 1195.14 708.070 1193.12 708.070 1190.59  c
708.070 1188.03 708.751 1186.01 710.114 1184.52  c
711.476 1183.03 713.324 1182.28 715.658 1182.28  c
717.992 1182.28 719.840 1183.03 721.203 1184.52  c
722.565 1186.01 723.246 1188.02 723.246 1190.56  c
723.246 1193.16 722.562 1195.20 721.195 1196.68  c
719.828 1198.17 717.948 1198.91 715.556 1198.91  c
h
715.599 1196.74 m
718.656 1196.74 720.184 1194.68 720.184 1190.56  c
720.184 1186.49 718.676 1184.45 715.658 1184.45  c
712.650 1184.45 711.146 1186.50 711.146 1190.59  c
711.146 1194.69 712.631 1196.74 715.599 1196.74  c
h
f
newpath
616.012 1233.87 m
616.012 1212.19 l
619.088 1212.19 l
619.088 1233.87 l
h
628.976 1234.24 m
627.658 1234.24 626.056 1233.93 624.171 1233.32  c
624.171 1230.67 l
626.056 1231.60 627.697 1232.07 629.093 1232.07  c
629.923 1232.07 630.612 1231.85 631.159 1231.40  c
631.705 1230.95 631.979 1230.39 631.979 1229.71  c
631.979 1228.73 631.212 1227.91 629.679 1227.27  c
627.995 1226.55 l
625.504 1225.51 624.259 1224.03 624.259 1222.08  c
624.259 1220.70 624.750 1219.60 625.731 1218.81  c
626.713 1218.01 628.058 1217.61 629.767 1217.61  c
630.656 1217.61 631.754 1217.74 633.063 1217.98  c
633.663 1218.10 l
633.663 1220.50 l
632.052 1220.02 630.773 1219.78 629.826 1219.78  c
627.970 1219.78 627.042 1220.46 627.042 1221.80  c
627.042 1222.67 627.745 1223.41 629.152 1224.00  c
630.543 1224.59 l
632.116 1225.25 633.229 1225.95 633.883 1226.69  c
634.537 1227.43 634.865 1228.35 634.865 1229.45  c
634.865 1230.85 634.313 1231.99 633.209 1232.89  c
632.106 1233.79 630.695 1234.24 628.976 1234.24  c
h
644.826 1234.24 m
643.361 1234.24 642.218 1233.82 641.398 1232.98  c
640.578 1232.14 640.167 1230.97 640.167 1229.48  c
640.167 1220.13 l
638.175 1220.13 l
638.175 1217.97 l
640.167 1217.97 l
640.167 1215.08 l
643.053 1214.80 l
643.053 1217.97 l
647.213 1217.97 l
647.213 1220.13 l
643.053 1220.13 l
643.053 1228.95 l
643.053 1231.03 643.952 1232.07 645.748 1232.07  c
646.129 1232.07 646.593 1232.01 647.140 1231.88  c
647.140 1233.87 l
646.251 1234.12 645.480 1234.24 644.826 1234.24  c
h
651.271 1233.87 m
651.271 1217.97 l
654.157 1217.97 l
654.157 1220.95 l
655.299 1218.73 656.959 1217.61 659.137 1217.61  c
659.430 1217.61 659.738 1217.64 660.060 1217.69  c
660.060 1220.38 l
659.562 1220.22 659.122 1220.13 658.742 1220.13  c
656.915 1220.13 655.387 1221.22 654.157 1223.39  c
654.157 1233.87 l
h
673.493 1233.87 m
673.493 1230.89 l
671.959 1233.12 670.099 1234.24 667.911 1234.24  c
666.525 1234.24 665.421 1233.80 664.601 1232.93  c
663.781 1232.06 663.370 1230.88 663.370 1229.39  c
663.370 1217.97 l
666.256 1217.97 l
666.256 1228.45 l
666.256 1229.65 666.430 1230.49 666.776 1231.00  c
667.123 1231.50 667.702 1231.75 668.512 1231.75  c
670.270 1231.75 671.930 1230.59 673.493 1228.28  c
673.493 1217.97 l
676.378 1217.97 l
676.378 1233.87 l
h
686.940 1234.24 m
685.475 1234.24 684.332 1233.82 683.512 1232.98  c
682.692 1232.14 682.282 1230.97 682.282 1229.48  c
682.282 1220.13 l
680.289 1220.13 l
680.289 1217.97 l
682.282 1217.97 l
682.282 1215.08 l
685.167 1214.80 l
685.167 1217.97 l
689.328 1217.97 l
689.328 1220.13 l
685.167 1220.13 l
685.167 1228.95 l
685.167 1231.03 686.066 1232.07 687.863 1232.07  c
688.244 1232.07 688.707 1232.01 689.254 1231.88  c
689.254 1233.87 l
688.366 1234.12 687.594 1234.24 686.940 1234.24  c
h
698.161 1234.24 m
696.696 1234.24 695.553 1233.82 694.733 1232.98  c
693.912 1232.14 693.502 1230.97 693.502 1229.48  c
693.502 1220.13 l
691.510 1220.13 l
691.510 1217.97 l
693.502 1217.97 l
693.502 1215.08 l
696.388 1214.80 l
696.388 1217.97 l
700.548 1217.97 l
700.548 1220.13 l
696.388 1220.13 l
696.388 1228.95 l
696.388 1231.03 697.286 1232.07 699.083 1232.07  c
699.464 1232.07 699.928 1232.01 700.475 1231.88  c
700.475 1233.87 l
699.586 1234.12 698.815 1234.24 698.161 1234.24  c
h
710.831 1234.24 m
708.556 1234.24 706.740 1233.49 705.382 1231.98  c
704.025 1230.47 703.346 1228.45 703.346 1225.92  c
703.346 1223.36 704.027 1221.34 705.390 1219.85  c
706.752 1218.36 708.600 1217.61 710.934 1217.61  c
713.268 1217.61 715.116 1218.36 716.478 1219.85  c
717.841 1221.34 718.522 1223.35 718.522 1225.89  c
718.522 1228.49 717.838 1230.53 716.471 1232.01  c
715.104 1233.50 713.224 1234.24 710.831 1234.24  c
h
710.875 1232.07 m
713.932 1232.07 715.460 1230.01 715.460 1225.89  c
715.460 1221.82 713.952 1219.78 710.934 1219.78  c
707.926 1219.78 706.422 1221.83 706.422 1225.92  c
706.422 1230.02 707.907 1232.07 710.875 1232.07  c
h
723.034 1233.87 m
723.034 1217.97 l
725.919 1217.97 l
725.919 1220.95 l
727.062 1218.73 728.722 1217.61 730.900 1217.61  c
731.193 1217.61 731.500 1217.64 731.823 1217.69  c
731.823 1220.38 l
731.325 1220.22 730.885 1220.13 730.504 1220.13  c
728.678 1220.13 727.150 1221.22 725.919 1223.39  c
725.919 1233.87 l
h
735.309 1233.87 m
735.309 1217.97 l
738.195 1217.97 l
738.195 1233.87 l
h
735.309 1215.08 m
735.309 1212.19 l
738.195 1212.19 l
738.195 1215.08 l
h
752.184 1231.85 m
750.455 1233.44 748.790 1234.24 747.189 1234.24  c
745.870 1234.24 744.777 1233.83 743.908 1233.00  c
743.038 1232.18 742.604 1231.13 742.604 1229.87  c
742.604 1228.14 743.334 1226.80 744.794 1225.87  c
746.254 1224.94 748.346 1224.47 751.071 1224.47  c
751.759 1224.47 l
751.759 1222.55 l
751.759 1220.70 750.812 1219.78 748.917 1219.78  c
747.394 1219.78 745.748 1220.25 743.981 1221.19  c
743.981 1218.80 l
745.924 1218.01 747.745 1217.61 749.445 1217.61  c
751.222 1217.61 752.533 1218.01 753.378 1218.82  c
754.223 1219.62 754.645 1220.86 754.645 1222.55  c
754.645 1229.76 l
754.645 1231.41 755.153 1232.23 756.168 1232.23  c
756.295 1232.23 756.481 1232.21 756.725 1232.17  c
756.930 1233.77 l
756.276 1234.08 755.553 1234.24 754.762 1234.24  c
753.414 1234.24 752.555 1233.44 752.184 1231.85  c
h
751.759 1230.29 m
751.759 1226.17 l
750.792 1226.14 l
749.210 1226.14 747.931 1226.44 746.954 1227.04  c
745.978 1227.64 745.490 1228.43 745.490 1229.41  c
745.490 1230.10 745.734 1230.69 746.222 1231.16  c
746.710 1231.64 747.306 1231.88 748.009 1231.88  c
749.210 1231.88 750.460 1231.35 751.759 1230.29  c
h
f
newpath
658.771 1269.75 m
657.316 1269.75 655.455 1269.43 653.190 1268.80  c
653.190 1265.75 l
655.631 1266.88 657.638 1267.45 659.210 1267.45  c
660.421 1267.45 661.395 1267.13 662.133 1266.50  c
662.870 1265.86 663.239 1265.03 663.239 1263.99  c
663.239 1263.14 662.997 1262.42 662.514 1261.82  c
662.030 1261.23 661.139 1260.56 659.840 1259.83  c
658.346 1258.97 l
656.500 1257.91 655.199 1256.92 654.442 1255.99  c
653.685 1255.05 653.307 1253.97 653.307 1252.73  c
653.307 1251.06 653.912 1249.68 655.123 1248.60  c
656.334 1247.52 657.877 1246.98 659.752 1246.98  c
661.422 1246.98 663.185 1247.26 665.040 1247.82  c
665.040 1250.63 l
662.755 1249.73 661.051 1249.28 659.928 1249.28  c
658.864 1249.28 657.985 1249.57 657.291 1250.13  c
656.598 1250.70 656.251 1251.41 656.251 1252.27  c
656.251 1252.99 656.505 1253.63 657.013 1254.19  c
657.521 1254.75 658.449 1255.41 659.796 1256.18  c
661.349 1257.06 l
663.224 1258.13 664.533 1259.13 665.275 1260.08  c
666.017 1261.03 666.388 1262.16 666.388 1263.49  c
666.388 1265.38 665.692 1266.89 664.301 1268.03  c
662.909 1269.18 661.066 1269.75 658.771 1269.75  c
h
675.543 1269.57 m
674.078 1269.57 672.936 1269.15 672.116 1268.31  c
671.295 1267.47 670.885 1266.31 670.885 1264.81  c
670.885 1255.47 l
668.893 1255.47 l
668.893 1253.30 l
670.885 1253.30 l
670.885 1250.41 l
673.771 1250.13 l
673.771 1253.30 l
677.931 1253.30 l
677.931 1255.47 l
673.771 1255.47 l
673.771 1264.28 l
673.771 1266.36 674.669 1267.40 676.466 1267.40  c
676.847 1267.40 677.311 1267.34 677.858 1267.21  c
677.858 1269.21 l
676.969 1269.45 676.198 1269.57 675.543 1269.57  c
h
690.192 1267.18 m
688.463 1268.78 686.798 1269.57 685.197 1269.57  c
683.878 1269.57 682.785 1269.16 681.915 1268.33  c
681.046 1267.51 680.612 1266.47 680.612 1265.21  c
680.612 1263.47 681.342 1262.13 682.802 1261.20  c
684.262 1260.27 686.354 1259.80 689.078 1259.80  c
689.767 1259.80 l
689.767 1257.88 l
689.767 1256.04 688.820 1255.11 686.925 1255.11  c
685.402 1255.11 683.756 1255.58 681.989 1256.52  c
681.989 1254.13 l
683.932 1253.34 685.753 1252.95 687.453 1252.95  c
689.230 1252.95 690.541 1253.35 691.386 1254.15  c
692.230 1254.95 692.653 1256.19 692.653 1257.88  c
692.653 1265.09 l
692.653 1266.74 693.161 1267.57 694.176 1267.57  c
694.303 1267.57 694.489 1267.55 694.733 1267.51  c
694.938 1269.10 l
694.284 1269.42 693.561 1269.57 692.770 1269.57  c
691.422 1269.57 690.563 1268.78 690.192 1267.18  c
h
689.767 1265.62 m
689.767 1261.50 l
688.800 1261.47 l
687.218 1261.47 685.939 1261.77 684.962 1262.37  c
683.986 1262.97 683.497 1263.76 683.497 1264.74  c
683.497 1265.43 683.742 1266.02 684.230 1266.50  c
684.718 1266.97 685.314 1267.21 686.017 1267.21  c
687.218 1267.21 688.468 1266.68 689.767 1265.62  c
h
698.556 1269.21 m
698.556 1253.30 l
701.442 1253.30 l
701.442 1256.29 l
702.584 1254.06 704.245 1252.95 706.422 1252.95  c
706.715 1252.95 707.023 1252.97 707.345 1253.02  c
707.345 1255.71 l
706.847 1255.55 706.408 1255.47 706.027 1255.47  c
704.201 1255.47 702.672 1256.55 701.442 1258.72  c
701.442 1269.21 l
h
715.607 1269.57 m
714.142 1269.57 712.999 1269.15 712.179 1268.31  c
711.359 1267.47 710.949 1266.31 710.949 1264.81  c
710.949 1255.47 l
708.956 1255.47 l
708.956 1253.30 l
710.949 1253.30 l
710.949 1250.41 l
713.834 1250.13 l
713.834 1253.30 l
717.995 1253.30 l
717.995 1255.47 l
713.834 1255.47 l
713.834 1264.28 l
713.834 1266.36 714.733 1267.40 716.530 1267.40  c
716.911 1267.40 717.374 1267.34 717.921 1267.21  c
717.921 1269.21 l
717.033 1269.45 716.261 1269.57 715.607 1269.57  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
575.089 1171.04 m
795.803 1171.04 l
795.803 1274.04 l
575.089 1274.04 l
575.089 1171.04 l
h
S
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
504.782 1222.54 m
504.782 1252.64 480.382 1277.04 450.282 1277.04  c
420.183 1277.04 395.782 1252.64 395.782 1222.54  c
395.782 1192.44 420.183 1168.04 450.282 1168.04  c
480.382 1168.04 504.782 1192.44 504.782 1222.54  c
h
S
1.00000 w
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
975.109 1222.54 m
975.109 1252.64 950.709 1277.04 920.609 1277.04  c
890.510 1277.04 866.109 1252.64 866.109 1222.54  c
866.109 1192.44 890.510 1168.04 920.609 1168.04  c
950.709 1168.04 975.109 1192.44 975.109 1222.54  c
h
f
3.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
975.109 1222.54 m
975.109 1252.64 950.709 1277.04 920.609 1277.04  c
890.510 1277.04 866.109 1252.64 866.109 1222.54  c
866.109 1192.44 890.510 1168.04 920.609 1168.04  c
950.709 1168.04 975.109 1192.44 975.109 1222.54  c
h
S
1.00000 w
2 J
10.0000 M
1.00000 .600000 0.00000 RG
newpath
1045.42 1171.04 m
1266.13 1171.04 l
1266.13 1274.04 l
1045.42 1274.04 l
1045.42 1171.04 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1130.13 1190.25 m
1126.44 1180.91 l
1122.73 1190.25 l
h
1133.38 1198.54 m
1131.02 1192.54 l
1121.84 1192.54 l
1119.45 1198.54 l
1116.60 1198.54 l
1125.19 1176.86 l
1128.24 1176.86 l
1136.71 1198.54 l
h
1143.23 1198.54 m
1137.31 1182.63 l
1140.19 1182.63 l
1144.82 1195.01 l
1149.70 1182.63 l
1152.40 1182.63 l
1146.11 1198.54 l
h
1158.75 1198.54 m
1152.84 1182.63 l
1155.72 1182.63 l
1160.35 1195.01 l
1165.23 1182.63 l
1167.92 1182.63 l
1161.64 1198.54 l
h
1170.98 1198.54 m
1170.98 1182.63 l
1173.87 1182.63 l
1173.87 1198.54 l
h
1170.98 1179.75 m
1170.98 1176.86 l
1173.87 1176.86 l
1173.87 1179.75 l
h
1185.88 1198.91 m
1183.61 1198.91 1181.79 1198.15 1180.43 1196.64  c
1179.08 1195.14 1178.40 1193.12 1178.40 1190.59  c
1178.40 1188.03 1179.08 1186.01 1180.44 1184.52  c
1181.80 1183.03 1183.65 1182.28 1185.98 1182.28  c
1188.32 1182.28 1190.17 1183.03 1191.53 1184.52  c
1192.89 1186.01 1193.57 1188.02 1193.57 1190.56  c
1193.57 1193.16 1192.89 1195.20 1191.52 1196.68  c
1190.15 1198.17 1188.27 1198.91 1185.88 1198.91  c
h
1185.93 1196.74 m
1188.98 1196.74 1190.51 1194.68 1190.51 1190.56  c
1190.51 1186.49 1189.00 1184.45 1185.98 1184.45  c
1182.98 1184.45 1181.47 1186.50 1181.47 1190.59  c
1181.47 1194.69 1182.96 1196.74 1185.93 1196.74  c
h
f
newpath
1086.34 1233.87 m
1086.34 1212.19 l
1089.41 1212.19 l
1089.41 1233.87 l
h
1099.30 1234.24 m
1097.98 1234.24 1096.38 1233.93 1094.50 1233.32  c
1094.50 1230.67 l
1096.38 1231.60 1098.02 1232.07 1099.42 1232.07  c
1100.25 1232.07 1100.94 1231.85 1101.49 1231.40  c
1102.03 1230.95 1102.31 1230.39 1102.31 1229.71  c
1102.31 1228.73 1101.54 1227.91 1100.01 1227.27  c
1098.32 1226.55 l
1095.83 1225.51 1094.59 1224.03 1094.59 1222.08  c
1094.59 1220.70 1095.08 1219.60 1096.06 1218.81  c
1097.04 1218.01 1098.38 1217.61 1100.09 1217.61  c
1100.98 1217.61 1102.08 1217.74 1103.39 1217.98  c
1103.99 1218.10 l
1103.99 1220.50 l
1102.38 1220.02 1101.10 1219.78 1100.15 1219.78  c
1098.30 1219.78 1097.37 1220.46 1097.37 1221.80  c
1097.37 1222.67 1098.07 1223.41 1099.48 1224.00  c
1100.87 1224.59 l
1102.44 1225.25 1103.56 1225.95 1104.21 1226.69  c
1104.86 1227.43 1105.19 1228.35 1105.19 1229.45  c
1105.19 1230.85 1104.64 1231.99 1103.54 1232.89  c
1102.43 1233.79 1101.02 1234.24 1099.30 1234.24  c
h
1115.15 1234.24 m
1113.69 1234.24 1112.54 1233.82 1111.72 1232.98  c
1110.90 1232.14 1110.49 1230.97 1110.49 1229.48  c
1110.49 1220.13 l
1108.50 1220.13 l
1108.50 1217.97 l
1110.49 1217.97 l
1110.49 1215.08 l
1113.38 1214.80 l
1113.38 1217.97 l
1117.54 1217.97 l
1117.54 1220.13 l
1113.38 1220.13 l
1113.38 1228.95 l
1113.38 1231.03 1114.28 1232.07 1116.08 1232.07  c
1116.46 1232.07 1116.92 1232.01 1117.47 1231.88  c
1117.47 1233.87 l
1116.58 1234.12 1115.81 1234.24 1115.15 1234.24  c
h
1121.60 1233.87 m
1121.60 1217.97 l
1124.48 1217.97 l
1124.48 1220.95 l
1125.63 1218.73 1127.29 1217.61 1129.46 1217.61  c
1129.76 1217.61 1130.06 1217.64 1130.39 1217.69  c
1130.39 1220.38 l
1129.89 1220.22 1129.45 1220.13 1129.07 1220.13  c
1127.24 1220.13 1125.71 1221.22 1124.48 1223.39  c
1124.48 1233.87 l
h
1143.82 1233.87 m
1143.82 1230.89 l
1142.29 1233.12 1140.43 1234.24 1138.24 1234.24  c
1136.85 1234.24 1135.75 1233.80 1134.93 1232.93  c
1134.11 1232.06 1133.70 1230.88 1133.70 1229.39  c
1133.70 1217.97 l
1136.58 1217.97 l
1136.58 1228.45 l
1136.58 1229.65 1136.76 1230.49 1137.10 1231.00  c
1137.45 1231.50 1138.03 1231.75 1138.84 1231.75  c
1140.60 1231.75 1142.26 1230.59 1143.82 1228.28  c
1143.82 1217.97 l
1146.70 1217.97 l
1146.70 1233.87 l
h
1157.27 1234.24 m
1155.80 1234.24 1154.66 1233.82 1153.84 1232.98  c
1153.02 1232.14 1152.61 1230.97 1152.61 1229.48  c
1152.61 1220.13 l
1150.62 1220.13 l
1150.62 1217.97 l
1152.61 1217.97 l
1152.61 1215.08 l
1155.49 1214.80 l
1155.49 1217.97 l
1159.65 1217.97 l
1159.65 1220.13 l
1155.49 1220.13 l
1155.49 1228.95 l
1155.49 1231.03 1156.39 1232.07 1158.19 1232.07  c
1158.57 1232.07 1159.03 1232.01 1159.58 1231.88  c
1159.58 1233.87 l
1158.69 1234.12 1157.92 1234.24 1157.27 1234.24  c
h
1168.49 1234.24 m
1167.02 1234.24 1165.88 1233.82 1165.06 1232.98  c
1164.24 1232.14 1163.83 1230.97 1163.83 1229.48  c
1163.83 1220.13 l
1161.84 1220.13 l
1161.84 1217.97 l
1163.83 1217.97 l
1163.83 1215.08 l
1166.71 1214.80 l
1166.71 1217.97 l
1170.87 1217.97 l
1170.87 1220.13 l
1166.71 1220.13 l
1166.71 1228.95 l
1166.71 1231.03 1167.61 1232.07 1169.41 1232.07  c
1169.79 1232.07 1170.25 1232.01 1170.80 1231.88  c
1170.80 1233.87 l
1169.91 1234.12 1169.14 1234.24 1168.49 1234.24  c
h
1181.16 1234.24 m
1178.88 1234.24 1177.07 1233.49 1175.71 1231.98  c
1174.35 1230.47 1173.67 1228.45 1173.67 1225.92  c
1173.67 1223.36 1174.35 1221.34 1175.72 1219.85  c
1177.08 1218.36 1178.93 1217.61 1181.26 1217.61  c
1183.59 1217.61 1185.44 1218.36 1186.81 1219.85  c
1188.17 1221.34 1188.85 1223.35 1188.85 1225.89  c
1188.85 1228.49 1188.16 1230.53 1186.80 1232.01  c
1185.43 1233.50 1183.55 1234.24 1181.16 1234.24  c
h
1181.20 1232.07 m
1184.26 1232.07 1185.79 1230.01 1185.79 1225.89  c
1185.79 1221.82 1184.28 1219.78 1181.26 1219.78  c
1178.25 1219.78 1176.75 1221.83 1176.75 1225.92  c
1176.75 1230.02 1178.23 1232.07 1181.20 1232.07  c
h
1193.36 1233.87 m
1193.36 1217.97 l
1196.25 1217.97 l
1196.25 1220.95 l
1197.39 1218.73 1199.05 1217.61 1201.23 1217.61  c
1201.52 1217.61 1201.83 1217.64 1202.15 1217.69  c
1202.15 1220.38 l
1201.65 1220.22 1201.21 1220.13 1200.83 1220.13  c
1199.00 1220.13 1197.48 1221.22 1196.25 1223.39  c
1196.25 1233.87 l
h
1205.64 1233.87 m
1205.64 1217.97 l
1208.52 1217.97 l
1208.52 1233.87 l
h
1205.64 1215.08 m
1205.64 1212.19 l
1208.52 1212.19 l
1208.52 1215.08 l
h
1222.51 1231.85 m
1220.78 1233.44 1219.12 1234.24 1217.52 1234.24  c
1216.20 1234.24 1215.10 1233.83 1214.23 1233.00  c
1213.37 1232.18 1212.93 1231.13 1212.93 1229.87  c
1212.93 1228.14 1213.66 1226.80 1215.12 1225.87  c
1216.58 1224.94 1218.67 1224.47 1221.40 1224.47  c
1222.09 1224.47 l
1222.09 1222.55 l
1222.09 1220.70 1221.14 1219.78 1219.24 1219.78  c
1217.72 1219.78 1216.08 1220.25 1214.31 1221.19  c
1214.31 1218.80 l
1216.25 1218.01 1218.07 1217.61 1219.77 1217.61  c
1221.55 1217.61 1222.86 1218.01 1223.70 1218.82  c
1224.55 1219.62 1224.97 1220.86 1224.97 1222.55  c
1224.97 1229.76 l
1224.97 1231.41 1225.48 1232.23 1226.49 1232.23  c
1226.62 1232.23 1226.81 1232.21 1227.05 1232.17  c
1227.26 1233.77 l
1226.60 1234.08 1225.88 1234.24 1225.09 1234.24  c
1223.74 1234.24 1222.88 1233.44 1222.51 1231.85  c
h
1222.09 1230.29 m
1222.09 1226.17 l
1221.12 1226.14 l
1219.54 1226.14 1218.26 1226.44 1217.28 1227.04  c
1216.30 1227.64 1215.82 1228.43 1215.82 1229.41  c
1215.82 1230.10 1216.06 1230.69 1216.55 1231.16  c
1217.04 1231.64 1217.63 1231.88 1218.34 1231.88  c
1219.54 1231.88 1220.79 1231.35 1222.09 1230.29  c
h
f
newpath
1098.16 1269.75 m
1094.79 1269.75 1092.19 1268.76 1090.35 1266.78  c
1088.52 1264.80 1087.60 1262.00 1087.60 1258.38  c
1087.60 1254.77 1088.53 1251.96 1090.40 1249.97  c
1092.27 1247.98 1094.91 1246.98 1098.31 1246.98  c
1100.25 1246.98 1102.53 1247.30 1105.13 1247.94  c
1105.13 1250.82 l
1102.16 1249.80 1099.87 1249.28 1098.26 1249.28  c
1095.91 1249.28 1094.09 1250.08 1092.80 1251.67  c
1091.51 1253.26 1090.87 1255.51 1090.87 1258.41  c
1090.87 1261.17 1091.55 1263.35 1092.93 1264.95  c
1094.31 1266.55 1096.19 1267.35 1098.57 1267.35  c
1100.62 1267.35 1102.82 1266.72 1105.16 1265.46  c
1105.16 1268.09 l
1103.02 1269.20 1100.69 1269.75 1098.16 1269.75  c
h
1115.94 1269.57 m
1113.67 1269.57 1111.85 1268.82 1110.49 1267.31  c
1109.14 1265.80 1108.46 1263.78 1108.46 1261.25  c
1108.46 1258.69 1109.14 1256.67 1110.50 1255.18  c
1111.86 1253.69 1113.71 1252.95 1116.05 1252.95  c
1118.38 1252.95 1120.23 1253.69 1121.59 1255.18  c
1122.95 1256.67 1123.63 1258.68 1123.63 1261.22  c
1123.63 1263.82 1122.95 1265.86 1121.58 1267.35  c
1120.22 1268.83 1118.34 1269.57 1115.94 1269.57  c
h
1115.99 1267.40 m
1119.04 1267.40 1120.57 1265.34 1120.57 1261.22  c
1120.57 1257.15 1119.06 1255.11 1116.05 1255.11  c
1113.04 1255.11 1111.53 1257.16 1111.53 1261.25  c
1111.53 1265.35 1113.02 1267.40 1115.99 1267.40  c
h
1128.15 1269.21 m
1128.15 1253.30 l
1131.03 1253.30 l
1131.03 1256.29 l
1132.44 1254.06 1134.24 1252.95 1136.45 1252.95  c
1138.58 1252.95 1140.03 1254.06 1140.80 1256.29  c
1142.17 1254.05 1143.95 1252.93 1146.13 1252.93  c
1147.54 1252.93 1148.63 1253.34 1149.40 1254.17  c
1150.17 1254.99 1150.56 1256.15 1150.56 1257.63  c
1150.56 1269.21 l
1147.66 1269.21 l
1147.66 1258.09 l
1147.66 1256.27 1146.94 1255.36 1145.50 1255.36  c
1144.01 1255.36 1142.44 1256.42 1140.80 1258.54  c
1140.80 1269.21 l
1137.90 1269.21 l
1137.90 1258.09 l
1137.90 1256.26 1137.17 1255.35 1135.70 1255.35  c
1134.25 1255.35 1132.69 1256.41 1131.03 1258.54  c
1131.03 1269.21 l
h
1156.15 1274.99 m
1156.15 1253.30 l
1159.04 1253.30 l
1159.04 1256.29 l
1160.22 1254.06 1161.99 1252.95 1164.36 1252.95  c
1166.27 1252.95 1167.78 1253.64 1168.88 1255.04  c
1169.97 1256.44 1170.52 1258.35 1170.52 1260.77  c
1170.52 1263.41 1169.90 1265.53 1168.66 1267.15  c
1167.41 1268.76 1165.77 1269.57 1163.74 1269.57  c
1161.86 1269.57 1160.29 1268.85 1159.04 1267.40  c
1159.04 1274.99 l
h
1159.04 1265.41 m
1160.52 1266.74 1161.94 1267.40 1163.29 1267.40  c
1166.06 1267.40 1167.45 1265.29 1167.45 1261.06  c
1167.45 1257.33 1166.22 1255.47 1163.76 1255.47  c
1162.14 1255.47 1160.57 1256.34 1159.04 1258.09  c
h
1175.04 1269.21 m
1175.04 1246.08 l
1177.92 1246.08 l
1177.92 1269.21 l
h
1195.37 1268.69 m
1193.43 1269.28 1191.78 1269.57 1190.40 1269.57  c
1188.06 1269.57 1186.15 1268.79 1184.67 1267.24  c
1183.19 1265.68 1182.45 1263.66 1182.45 1261.18  c
1182.45 1258.77 1183.10 1256.79 1184.40 1255.25  c
1185.71 1253.70 1187.37 1252.93 1189.41 1252.93  c
1191.33 1252.93 1192.82 1253.62 1193.87 1254.98  c
1194.92 1256.35 1195.44 1258.29 1195.44 1260.81  c
1195.43 1261.71 l
1185.39 1261.71 l
1185.81 1265.49 1187.66 1267.37 1190.94 1267.37  c
1192.14 1267.37 1193.62 1267.05 1195.37 1266.41  c
h
1185.52 1259.54 m
1192.54 1259.54 l
1192.54 1256.58 1191.44 1255.10 1189.23 1255.10  c
1187.01 1255.10 1185.78 1256.58 1185.52 1259.54  c
h
1205.20 1269.57 m
1203.73 1269.57 1202.59 1269.15 1201.77 1268.31  c
1200.95 1267.47 1200.54 1266.31 1200.54 1264.81  c
1200.54 1255.47 l
1198.55 1255.47 l
1198.55 1253.30 l
1200.54 1253.30 l
1200.54 1250.41 l
1203.42 1250.13 l
1203.42 1253.30 l
1207.58 1253.30 l
1207.58 1255.47 l
1203.42 1255.47 l
1203.42 1264.28 l
1203.42 1266.36 1204.32 1267.40 1206.12 1267.40  c
1206.50 1267.40 1206.96 1267.34 1207.51 1267.21  c
1207.51 1269.21 l
1206.62 1269.45 1205.85 1269.57 1205.20 1269.57  c
h
1223.30 1268.69 m
1221.37 1269.28 1219.71 1269.57 1218.34 1269.57  c
1215.99 1269.57 1214.08 1268.79 1212.60 1267.24  c
1211.12 1265.68 1210.38 1263.66 1210.38 1261.18  c
1210.38 1258.77 1211.03 1256.79 1212.34 1255.25  c
1213.64 1253.70 1215.31 1252.93 1217.34 1252.93  c
1219.26 1252.93 1220.75 1253.62 1221.80 1254.98  c
1222.85 1256.35 1223.37 1258.29 1223.37 1260.81  c
1223.36 1261.71 l
1213.33 1261.71 l
1213.75 1265.49 1215.60 1267.37 1218.88 1267.37  c
1220.08 1267.37 1221.55 1267.05 1223.30 1266.41  c
h
1213.46 1259.54 m
1220.47 1259.54 l
1220.47 1256.58 1219.37 1255.10 1217.16 1255.10  c
1214.95 1255.10 1213.71 1256.58 1213.46 1259.54  c
h
f
2 J
10.0000 M
1.00000 .600000 0.00000 RG
3.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1045.42 1171.04 m
1266.13 1171.04 l
1266.13 1274.04 l
1045.42 1274.04 l
1045.42 1171.04 l
h
S
1.00000 w
2 J
10.0000 M
0.00000 1.00000 1.00000 RG
newpath
1445.44 1222.54 m
1445.44 1252.64 1421.04 1277.04 1390.94 1277.04  c
1360.84 1277.04 1336.44 1252.64 1336.44 1222.54  c
1336.44 1192.44 1360.84 1168.04 1390.94 1168.04  c
1421.04 1168.04 1445.44 1192.44 1445.44 1222.54  c
h
f
3.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1445.44 1222.54 m
1445.44 1252.64 1421.04 1277.04 1390.94 1277.04  c
1360.84 1277.04 1336.44 1252.64 1336.44 1222.54  c
1336.44 1192.44 1360.84 1168.04 1390.94 1168.04  c
1421.04 1168.04 1445.44 1192.44 1445.44 1222.54  c
h
S
1.00000 w
2 J
10.0000 M
newpath
1405.94 1222.54 m
1405.94 1230.82 1399.22 1237.54 1390.94 1237.54  c
1382.65 1237.54 1375.94 1230.82 1375.94 1222.54  c
1375.94 1214.25 1382.65 1207.54 1390.94 1207.54  c
1399.22 1207.54 1405.94 1214.25 1405.94 1222.54  c
h
f
0 J
1.45000 M
newpath
1405.94 1222.54 m
1405.94 1230.82 1399.22 1237.54 1390.94 1237.54  c
1382.65 1237.54 1375.94 1230.82 1375.94 1222.54  c
1375.94 1214.25 1382.65 1207.54 1390.94 1207.54  c
1399.22 1207.54 1405.94 1214.25 1405.94 1222.54  c
h
S
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
504.782 1222.54 m
565.089 1222.54 l
S
newpath
575.089 1222.54 m
560.089 1216.29 l
563.839 1222.54 l
560.089 1228.79 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
795.803 1222.54 m
856.109 1222.54 l
S
newpath
866.109 1222.54 m
851.109 1216.29 l
854.859 1222.54 l
851.109 1228.79 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
975.109 1222.54 m
1035.42 1222.54 l
S
newpath
1045.42 1222.54 m
1030.42 1216.29 l
1034.17 1222.54 l
1030.42 1228.79 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
1266.13 1222.54 m
1326.44 1222.54 l
S
newpath
1336.44 1222.54 m
1321.44 1216.29 l
1325.19 1222.54 l
1321.44 1228.79 l
h
f
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
